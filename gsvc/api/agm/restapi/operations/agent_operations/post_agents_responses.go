// Code generated by go-swagger; DO NOT EDIT.

package agent_operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"gsvc/api/agm/models"
)

// PostAgentsCreatedCode is the HTTP code returned for type PostAgentsCreated
const PostAgentsCreatedCode int = 201

/*
PostAgentsCreated Created

swagger:response postAgentsCreated
*/
type PostAgentsCreated struct {

	/*
	  In: Body
	*/
	Payload *models.Agent `json:"body,omitempty"`
}

// NewPostAgentsCreated creates PostAgentsCreated with default headers values
func NewPostAgentsCreated() *PostAgentsCreated {

	return &PostAgentsCreated{}
}

// WithPayload adds the payload to the post agents created response
func (o *PostAgentsCreated) WithPayload(payload *models.Agent) *PostAgentsCreated {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post agents created response
func (o *PostAgentsCreated) SetPayload(payload *models.Agent) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostAgentsCreated) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(201)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostAgentsBadRequestCode is the HTTP code returned for type PostAgentsBadRequest
const PostAgentsBadRequestCode int = 400

/*
PostAgentsBadRequest Bad Request

swagger:response postAgentsBadRequest
*/
type PostAgentsBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Badrequest `json:"body,omitempty"`
}

// NewPostAgentsBadRequest creates PostAgentsBadRequest with default headers values
func NewPostAgentsBadRequest() *PostAgentsBadRequest {

	return &PostAgentsBadRequest{}
}

// WithPayload adds the payload to the post agents bad request response
func (o *PostAgentsBadRequest) WithPayload(payload *models.Badrequest) *PostAgentsBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post agents bad request response
func (o *PostAgentsBadRequest) SetPayload(payload *models.Badrequest) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostAgentsBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostAgentsUnauthorizedCode is the HTTP code returned for type PostAgentsUnauthorized
const PostAgentsUnauthorizedCode int = 401

/*
PostAgentsUnauthorized Unauthorized

swagger:response postAgentsUnauthorized
*/
type PostAgentsUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.Unauthorized `json:"body,omitempty"`
}

// NewPostAgentsUnauthorized creates PostAgentsUnauthorized with default headers values
func NewPostAgentsUnauthorized() *PostAgentsUnauthorized {

	return &PostAgentsUnauthorized{}
}

// WithPayload adds the payload to the post agents unauthorized response
func (o *PostAgentsUnauthorized) WithPayload(payload *models.Unauthorized) *PostAgentsUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post agents unauthorized response
func (o *PostAgentsUnauthorized) SetPayload(payload *models.Unauthorized) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostAgentsUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostAgentsForbiddenCode is the HTTP code returned for type PostAgentsForbidden
const PostAgentsForbiddenCode int = 403

/*
PostAgentsForbidden Forbidden

swagger:response postAgentsForbidden
*/
type PostAgentsForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.Forbidden `json:"body,omitempty"`
}

// NewPostAgentsForbidden creates PostAgentsForbidden with default headers values
func NewPostAgentsForbidden() *PostAgentsForbidden {

	return &PostAgentsForbidden{}
}

// WithPayload adds the payload to the post agents forbidden response
func (o *PostAgentsForbidden) WithPayload(payload *models.Forbidden) *PostAgentsForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post agents forbidden response
func (o *PostAgentsForbidden) SetPayload(payload *models.Forbidden) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostAgentsForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostAgentsConflictCode is the HTTP code returned for type PostAgentsConflict
const PostAgentsConflictCode int = 409

/*
PostAgentsConflict Resource is already available.

swagger:response postAgentsConflict
*/
type PostAgentsConflict struct {

	/*
	  In: Body
	*/
	Payload *models.Conflict `json:"body,omitempty"`
}

// NewPostAgentsConflict creates PostAgentsConflict with default headers values
func NewPostAgentsConflict() *PostAgentsConflict {

	return &PostAgentsConflict{}
}

// WithPayload adds the payload to the post agents conflict response
func (o *PostAgentsConflict) WithPayload(payload *models.Conflict) *PostAgentsConflict {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post agents conflict response
func (o *PostAgentsConflict) SetPayload(payload *models.Conflict) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostAgentsConflict) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(409)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostAgentsInternalServerErrorCode is the HTTP code returned for type PostAgentsInternalServerError
const PostAgentsInternalServerErrorCode int = 500

/*
PostAgentsInternalServerError unexpected error

swagger:response postAgentsInternalServerError
*/
type PostAgentsInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPostAgentsInternalServerError creates PostAgentsInternalServerError with default headers values
func NewPostAgentsInternalServerError() *PostAgentsInternalServerError {

	return &PostAgentsInternalServerError{}
}

// WithPayload adds the payload to the post agents internal server error response
func (o *PostAgentsInternalServerError) WithPayload(payload *models.Error) *PostAgentsInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post agents internal server error response
func (o *PostAgentsInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostAgentsInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*
PostAgentsDefault Other error with any status code and response body format.

swagger:response postAgentsDefault
*/
type PostAgentsDefault struct {
	_statusCode int
}

// NewPostAgentsDefault creates PostAgentsDefault with default headers values
func NewPostAgentsDefault(code int) *PostAgentsDefault {
	if code <= 0 {
		code = 500
	}

	return &PostAgentsDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the post agents default response
func (o *PostAgentsDefault) WithStatusCode(code int) *PostAgentsDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the post agents default response
func (o *PostAgentsDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WriteResponse to the client
func (o *PostAgentsDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(o._statusCode)
}
