// Code generated by go-swagger; DO NOT EDIT.

package boarding_operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"

	"gsvc/api/agm/models"
)

// GetAgentsIDBoardingConfigurationHandlerFunc turns a function with the right signature into a get agents ID boarding configuration handler
type GetAgentsIDBoardingConfigurationHandlerFunc func(GetAgentsIDBoardingConfigurationParams, *models.Principal) middleware.Responder

// Handle executing the request and returning a response
func (fn GetAgentsIDBoardingConfigurationHandlerFunc) Handle(params GetAgentsIDBoardingConfigurationParams, principal *models.Principal) middleware.Responder {
	return fn(params, principal)
}

// GetAgentsIDBoardingConfigurationHandler interface for that can handle valid get agents ID boarding configuration params
type GetAgentsIDBoardingConfigurationHandler interface {
	Handle(GetAgentsIDBoardingConfigurationParams, *models.Principal) middleware.Responder
}

// NewGetAgentsIDBoardingConfiguration creates a new http.Handler for the get agents ID boarding configuration operation
func NewGetAgentsIDBoardingConfiguration(ctx *middleware.Context, handler GetAgentsIDBoardingConfigurationHandler) *GetAgentsIDBoardingConfiguration {
	return &GetAgentsIDBoardingConfiguration{Context: ctx, Handler: handler}
}

/*
	GetAgentsIDBoardingConfiguration swagger:route GET /agents/{id}/boarding/configuration Boarding Operations getAgentsIdBoardingConfiguration

# Get boarding configuration

Boarding configuration holds necessary information of the agent to onboard it.(ex; iat, clientCredentialProfile). Generating a Boarding Configuration action is an asynchronous operation therefore it may take a few seconds. In case Boarding Configuration is not generated, try to read the configuration again after a couple of seconds.
*/
type GetAgentsIDBoardingConfiguration struct {
	Context *middleware.Context
	Handler GetAgentsIDBoardingConfigurationHandler
}

func (o *GetAgentsIDBoardingConfiguration) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		*r = *rCtx
	}
	var Params = NewGetAgentsIDBoardingConfigurationParams()
	uprinc, aCtx, err := o.Context.Authorize(r, route)
	if err != nil {
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}
	if aCtx != nil {
		*r = *aCtx
	}
	var principal *models.Principal
	if uprinc != nil {
		principal = uprinc.(*models.Principal) // this is really a models.Principal, I promise
	}

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params, principal) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}
