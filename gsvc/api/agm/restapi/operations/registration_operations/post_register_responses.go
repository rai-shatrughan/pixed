// Code generated by go-swagger; DO NOT EDIT.

package registration_operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"gsvc/api/agm/models"
)

// PostRegisterCreatedCode is the HTTP code returned for type PostRegisterCreated
const PostRegisterCreatedCode int = 201

/*
PostRegisterCreated Created

swagger:response postRegisterCreated
*/
type PostRegisterCreated struct {

	/*
	  In: Body
	*/
	Payload *models.ClientIdentifier `json:"body,omitempty"`
}

// NewPostRegisterCreated creates PostRegisterCreated with default headers values
func NewPostRegisterCreated() *PostRegisterCreated {

	return &PostRegisterCreated{}
}

// WithPayload adds the payload to the post register created response
func (o *PostRegisterCreated) WithPayload(payload *models.ClientIdentifier) *PostRegisterCreated {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post register created response
func (o *PostRegisterCreated) SetPayload(payload *models.ClientIdentifier) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostRegisterCreated) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(201)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostRegisterBadRequestCode is the HTTP code returned for type PostRegisterBadRequest
const PostRegisterBadRequestCode int = 400

/*
PostRegisterBadRequest Bad Request

swagger:response postRegisterBadRequest
*/
type PostRegisterBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.BadrequestIAM `json:"body,omitempty"`
}

// NewPostRegisterBadRequest creates PostRegisterBadRequest with default headers values
func NewPostRegisterBadRequest() *PostRegisterBadRequest {

	return &PostRegisterBadRequest{}
}

// WithPayload adds the payload to the post register bad request response
func (o *PostRegisterBadRequest) WithPayload(payload *models.BadrequestIAM) *PostRegisterBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post register bad request response
func (o *PostRegisterBadRequest) SetPayload(payload *models.BadrequestIAM) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostRegisterBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostRegisterUnauthorizedCode is the HTTP code returned for type PostRegisterUnauthorized
const PostRegisterUnauthorizedCode int = 401

/*
PostRegisterUnauthorized Unauthorized

swagger:response postRegisterUnauthorized
*/
type PostRegisterUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.UnauthorizedIAM `json:"body,omitempty"`
}

// NewPostRegisterUnauthorized creates PostRegisterUnauthorized with default headers values
func NewPostRegisterUnauthorized() *PostRegisterUnauthorized {

	return &PostRegisterUnauthorized{}
}

// WithPayload adds the payload to the post register unauthorized response
func (o *PostRegisterUnauthorized) WithPayload(payload *models.UnauthorizedIAM) *PostRegisterUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post register unauthorized response
func (o *PostRegisterUnauthorized) SetPayload(payload *models.UnauthorizedIAM) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostRegisterUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostRegisterTooManyRequestsCode is the HTTP code returned for type PostRegisterTooManyRequests
const PostRegisterTooManyRequestsCode int = 429

/*
PostRegisterTooManyRequests TooManyRequests

swagger:response postRegisterTooManyRequests
*/
type PostRegisterTooManyRequests struct {

	/*
	  In: Body
	*/
	Payload *models.TooManyRequests `json:"body,omitempty"`
}

// NewPostRegisterTooManyRequests creates PostRegisterTooManyRequests with default headers values
func NewPostRegisterTooManyRequests() *PostRegisterTooManyRequests {

	return &PostRegisterTooManyRequests{}
}

// WithPayload adds the payload to the post register too many requests response
func (o *PostRegisterTooManyRequests) WithPayload(payload *models.TooManyRequests) *PostRegisterTooManyRequests {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post register too many requests response
func (o *PostRegisterTooManyRequests) SetPayload(payload *models.TooManyRequests) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostRegisterTooManyRequests) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(429)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostRegisterInternalServerErrorCode is the HTTP code returned for type PostRegisterInternalServerError
const PostRegisterInternalServerErrorCode int = 500

/*
PostRegisterInternalServerError unexpected error

swagger:response postRegisterInternalServerError
*/
type PostRegisterInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPostRegisterInternalServerError creates PostRegisterInternalServerError with default headers values
func NewPostRegisterInternalServerError() *PostRegisterInternalServerError {

	return &PostRegisterInternalServerError{}
}

// WithPayload adds the payload to the post register internal server error response
func (o *PostRegisterInternalServerError) WithPayload(payload *models.Error) *PostRegisterInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post register internal server error response
func (o *PostRegisterInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostRegisterInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*
PostRegisterDefault Other error with any status code and response body format.

swagger:response postRegisterDefault
*/
type PostRegisterDefault struct {
	_statusCode int
}

// NewPostRegisterDefault creates PostRegisterDefault with default headers values
func NewPostRegisterDefault(code int) *PostRegisterDefault {
	if code <= 0 {
		code = 500
	}

	return &PostRegisterDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the post register default response
func (o *PostRegisterDefault) WithStatusCode(code int) *PostRegisterDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the post register default response
func (o *PostRegisterDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WriteResponse to the client
func (o *PostRegisterDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(o._statusCode)
}
