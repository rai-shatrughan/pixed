// Code generated by go-swagger; DO NOT EDIT.

package registration_operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"gsvc/api/agm/models"
)

// PutRegisterClientIDOKCode is the HTTP code returned for type PutRegisterClientIDOK
const PutRegisterClientIDOKCode int = 200

/*
PutRegisterClientIDOK OK

swagger:response putRegisterClientIdOK
*/
type PutRegisterClientIDOK struct {

	/*
	  In: Body
	*/
	Payload *models.ClientIdentifier `json:"body,omitempty"`
}

// NewPutRegisterClientIDOK creates PutRegisterClientIDOK with default headers values
func NewPutRegisterClientIDOK() *PutRegisterClientIDOK {

	return &PutRegisterClientIDOK{}
}

// WithPayload adds the payload to the put register client Id o k response
func (o *PutRegisterClientIDOK) WithPayload(payload *models.ClientIdentifier) *PutRegisterClientIDOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the put register client Id o k response
func (o *PutRegisterClientIDOK) SetPayload(payload *models.ClientIdentifier) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PutRegisterClientIDOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PutRegisterClientIDBadRequestCode is the HTTP code returned for type PutRegisterClientIDBadRequest
const PutRegisterClientIDBadRequestCode int = 400

/*
PutRegisterClientIDBadRequest Bad Request

swagger:response putRegisterClientIdBadRequest
*/
type PutRegisterClientIDBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.BadrequestIAM `json:"body,omitempty"`
}

// NewPutRegisterClientIDBadRequest creates PutRegisterClientIDBadRequest with default headers values
func NewPutRegisterClientIDBadRequest() *PutRegisterClientIDBadRequest {

	return &PutRegisterClientIDBadRequest{}
}

// WithPayload adds the payload to the put register client Id bad request response
func (o *PutRegisterClientIDBadRequest) WithPayload(payload *models.BadrequestIAM) *PutRegisterClientIDBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the put register client Id bad request response
func (o *PutRegisterClientIDBadRequest) SetPayload(payload *models.BadrequestIAM) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PutRegisterClientIDBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PutRegisterClientIDUnauthorizedCode is the HTTP code returned for type PutRegisterClientIDUnauthorized
const PutRegisterClientIDUnauthorizedCode int = 401

/*
PutRegisterClientIDUnauthorized Unauthorized

swagger:response putRegisterClientIdUnauthorized
*/
type PutRegisterClientIDUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.UnauthorizedIAM `json:"body,omitempty"`
}

// NewPutRegisterClientIDUnauthorized creates PutRegisterClientIDUnauthorized with default headers values
func NewPutRegisterClientIDUnauthorized() *PutRegisterClientIDUnauthorized {

	return &PutRegisterClientIDUnauthorized{}
}

// WithPayload adds the payload to the put register client Id unauthorized response
func (o *PutRegisterClientIDUnauthorized) WithPayload(payload *models.UnauthorizedIAM) *PutRegisterClientIDUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the put register client Id unauthorized response
func (o *PutRegisterClientIDUnauthorized) SetPayload(payload *models.UnauthorizedIAM) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PutRegisterClientIDUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PutRegisterClientIDInternalServerErrorCode is the HTTP code returned for type PutRegisterClientIDInternalServerError
const PutRegisterClientIDInternalServerErrorCode int = 500

/*
PutRegisterClientIDInternalServerError unexpected error

swagger:response putRegisterClientIdInternalServerError
*/
type PutRegisterClientIDInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPutRegisterClientIDInternalServerError creates PutRegisterClientIDInternalServerError with default headers values
func NewPutRegisterClientIDInternalServerError() *PutRegisterClientIDInternalServerError {

	return &PutRegisterClientIDInternalServerError{}
}

// WithPayload adds the payload to the put register client Id internal server error response
func (o *PutRegisterClientIDInternalServerError) WithPayload(payload *models.Error) *PutRegisterClientIDInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the put register client Id internal server error response
func (o *PutRegisterClientIDInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PutRegisterClientIDInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*
PutRegisterClientIDDefault Other error with any status code and response body format.

swagger:response putRegisterClientIdDefault
*/
type PutRegisterClientIDDefault struct {
	_statusCode int
}

// NewPutRegisterClientIDDefault creates PutRegisterClientIDDefault with default headers values
func NewPutRegisterClientIDDefault(code int) *PutRegisterClientIDDefault {
	if code <= 0 {
		code = 500
	}

	return &PutRegisterClientIDDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the put register client ID default response
func (o *PutRegisterClientIDDefault) WithStatusCode(code int) *PutRegisterClientIDDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the put register client ID default response
func (o *PutRegisterClientIDDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WriteResponse to the client
func (o *PutRegisterClientIDDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(o._statusCode)
}
