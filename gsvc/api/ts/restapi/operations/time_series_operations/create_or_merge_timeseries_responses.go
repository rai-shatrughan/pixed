// Code generated by go-swagger; DO NOT EDIT.

package time_series_operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/swag"

	"gsvc/api/ts/models"
)

// CreateOrMergeTimeseriesNoContentCode is the HTTP code returned for type CreateOrMergeTimeseriesNoContent
const CreateOrMergeTimeseriesNoContentCode int = 204

/*
CreateOrMergeTimeseriesNoContent No Content.

swagger:response createOrMergeTimeseriesNoContent
*/
type CreateOrMergeTimeseriesNoContent struct {
}

// NewCreateOrMergeTimeseriesNoContent creates CreateOrMergeTimeseriesNoContent with default headers values
func NewCreateOrMergeTimeseriesNoContent() *CreateOrMergeTimeseriesNoContent {

	return &CreateOrMergeTimeseriesNoContent{}
}

// WriteResponse to the client
func (o *CreateOrMergeTimeseriesNoContent) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(204)
}

// CreateOrMergeTimeseriesBadRequestCode is the HTTP code returned for type CreateOrMergeTimeseriesBadRequest
const CreateOrMergeTimeseriesBadRequestCode int = 400

/*
CreateOrMergeTimeseriesBadRequest Bad request, in case the resource is invalid.
Few of the validations as below -
- The maximum time range of time series data acceptable is one day from current time
- The provided time stamps must be not later than the currently latest time stamp in the time series
- The maximum size of acceptable request bodies is 1 MB
- Request payload date should be in ISO format
- The maximum number of records supported in one request is 10
- The specified date is outside the acceptable range

swagger:response createOrMergeTimeseriesBadRequest
*/
type CreateOrMergeTimeseriesBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.BadRequest `json:"body,omitempty"`
}

// NewCreateOrMergeTimeseriesBadRequest creates CreateOrMergeTimeseriesBadRequest with default headers values
func NewCreateOrMergeTimeseriesBadRequest() *CreateOrMergeTimeseriesBadRequest {

	return &CreateOrMergeTimeseriesBadRequest{}
}

// WithPayload adds the payload to the create or merge timeseries bad request response
func (o *CreateOrMergeTimeseriesBadRequest) WithPayload(payload *models.BadRequest) *CreateOrMergeTimeseriesBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create or merge timeseries bad request response
func (o *CreateOrMergeTimeseriesBadRequest) SetPayload(payload *models.BadRequest) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateOrMergeTimeseriesBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CreateOrMergeTimeseriesUnauthorizedCode is the HTTP code returned for type CreateOrMergeTimeseriesUnauthorized
const CreateOrMergeTimeseriesUnauthorizedCode int = 401

/*
CreateOrMergeTimeseriesUnauthorized unauthorized

swagger:response createOrMergeTimeseriesUnauthorized
*/
type CreateOrMergeTimeseriesUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.Unauthorized `json:"body,omitempty"`
}

// NewCreateOrMergeTimeseriesUnauthorized creates CreateOrMergeTimeseriesUnauthorized with default headers values
func NewCreateOrMergeTimeseriesUnauthorized() *CreateOrMergeTimeseriesUnauthorized {

	return &CreateOrMergeTimeseriesUnauthorized{}
}

// WithPayload adds the payload to the create or merge timeseries unauthorized response
func (o *CreateOrMergeTimeseriesUnauthorized) WithPayload(payload *models.Unauthorized) *CreateOrMergeTimeseriesUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create or merge timeseries unauthorized response
func (o *CreateOrMergeTimeseriesUnauthorized) SetPayload(payload *models.Unauthorized) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateOrMergeTimeseriesUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CreateOrMergeTimeseriesForbiddenCode is the HTTP code returned for type CreateOrMergeTimeseriesForbidden
const CreateOrMergeTimeseriesForbiddenCode int = 403

/*
CreateOrMergeTimeseriesForbidden forbidden

swagger:response createOrMergeTimeseriesForbidden
*/
type CreateOrMergeTimeseriesForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.Forbidden `json:"body,omitempty"`
}

// NewCreateOrMergeTimeseriesForbidden creates CreateOrMergeTimeseriesForbidden with default headers values
func NewCreateOrMergeTimeseriesForbidden() *CreateOrMergeTimeseriesForbidden {

	return &CreateOrMergeTimeseriesForbidden{}
}

// WithPayload adds the payload to the create or merge timeseries forbidden response
func (o *CreateOrMergeTimeseriesForbidden) WithPayload(payload *models.Forbidden) *CreateOrMergeTimeseriesForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create or merge timeseries forbidden response
func (o *CreateOrMergeTimeseriesForbidden) SetPayload(payload *models.Forbidden) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateOrMergeTimeseriesForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CreateOrMergeTimeseriesNotFoundCode is the HTTP code returned for type CreateOrMergeTimeseriesNotFound
const CreateOrMergeTimeseriesNotFoundCode int = 404

/*
CreateOrMergeTimeseriesNotFound Not Found, in case the resource is not found.
Few of the validations as below -
- Unable to find the tenant
- Unable to find the asset
- Unable to find the aspect
- Unable to find the asset type

swagger:response createOrMergeTimeseriesNotFound
*/
type CreateOrMergeTimeseriesNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.NotFound `json:"body,omitempty"`
}

// NewCreateOrMergeTimeseriesNotFound creates CreateOrMergeTimeseriesNotFound with default headers values
func NewCreateOrMergeTimeseriesNotFound() *CreateOrMergeTimeseriesNotFound {

	return &CreateOrMergeTimeseriesNotFound{}
}

// WithPayload adds the payload to the create or merge timeseries not found response
func (o *CreateOrMergeTimeseriesNotFound) WithPayload(payload *models.NotFound) *CreateOrMergeTimeseriesNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create or merge timeseries not found response
func (o *CreateOrMergeTimeseriesNotFound) SetPayload(payload *models.NotFound) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateOrMergeTimeseriesNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CreateOrMergeTimeseriesTooManyRequestsCode is the HTTP code returned for type CreateOrMergeTimeseriesTooManyRequests
const CreateOrMergeTimeseriesTooManyRequestsCode int = 429

/*
CreateOrMergeTimeseriesTooManyRequests Too many requests that can be arised based on subsequent case:
- User has sent too many requests in a given amount of time.

A Retry-After header might be included to this response indicating how long in 'seconds' to wait before making a new request.

swagger:response createOrMergeTimeseriesTooManyRequests
*/
type CreateOrMergeTimeseriesTooManyRequests struct {
	/*Time in seconds to wait before making a new request

	 */
	RetryAfter int64 `json:"Retry-After"`

	/*
	  In: Body
	*/
	Payload *models.TooManyRequests `json:"body,omitempty"`
}

// NewCreateOrMergeTimeseriesTooManyRequests creates CreateOrMergeTimeseriesTooManyRequests with default headers values
func NewCreateOrMergeTimeseriesTooManyRequests() *CreateOrMergeTimeseriesTooManyRequests {

	return &CreateOrMergeTimeseriesTooManyRequests{}
}

// WithRetryAfter adds the retryAfter to the create or merge timeseries too many requests response
func (o *CreateOrMergeTimeseriesTooManyRequests) WithRetryAfter(retryAfter int64) *CreateOrMergeTimeseriesTooManyRequests {
	o.RetryAfter = retryAfter
	return o
}

// SetRetryAfter sets the retryAfter to the create or merge timeseries too many requests response
func (o *CreateOrMergeTimeseriesTooManyRequests) SetRetryAfter(retryAfter int64) {
	o.RetryAfter = retryAfter
}

// WithPayload adds the payload to the create or merge timeseries too many requests response
func (o *CreateOrMergeTimeseriesTooManyRequests) WithPayload(payload *models.TooManyRequests) *CreateOrMergeTimeseriesTooManyRequests {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create or merge timeseries too many requests response
func (o *CreateOrMergeTimeseriesTooManyRequests) SetPayload(payload *models.TooManyRequests) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateOrMergeTimeseriesTooManyRequests) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	// response header Retry-After

	retryAfter := swag.FormatInt64(o.RetryAfter)
	if retryAfter != "" {
		rw.Header().Set("Retry-After", retryAfter)
	}

	rw.WriteHeader(429)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CreateOrMergeTimeseriesInternalServerErrorCode is the HTTP code returned for type CreateOrMergeTimeseriesInternalServerError
const CreateOrMergeTimeseriesInternalServerErrorCode int = 500

/*
CreateOrMergeTimeseriesInternalServerError Internal service error.

swagger:response createOrMergeTimeseriesInternalServerError
*/
type CreateOrMergeTimeseriesInternalServerError struct {
}

// NewCreateOrMergeTimeseriesInternalServerError creates CreateOrMergeTimeseriesInternalServerError with default headers values
func NewCreateOrMergeTimeseriesInternalServerError() *CreateOrMergeTimeseriesInternalServerError {

	return &CreateOrMergeTimeseriesInternalServerError{}
}

// WriteResponse to the client
func (o *CreateOrMergeTimeseriesInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(500)
}

// CreateOrMergeTimeseriesServiceUnavailableCode is the HTTP code returned for type CreateOrMergeTimeseriesServiceUnavailable
const CreateOrMergeTimeseriesServiceUnavailableCode int = 503

/*
CreateOrMergeTimeseriesServiceUnavailable Service unavailable.

swagger:response createOrMergeTimeseriesServiceUnavailable
*/
type CreateOrMergeTimeseriesServiceUnavailable struct {

	/*
	  In: Body
	*/
	Payload *models.ServiceUnavailable `json:"body,omitempty"`
}

// NewCreateOrMergeTimeseriesServiceUnavailable creates CreateOrMergeTimeseriesServiceUnavailable with default headers values
func NewCreateOrMergeTimeseriesServiceUnavailable() *CreateOrMergeTimeseriesServiceUnavailable {

	return &CreateOrMergeTimeseriesServiceUnavailable{}
}

// WithPayload adds the payload to the create or merge timeseries service unavailable response
func (o *CreateOrMergeTimeseriesServiceUnavailable) WithPayload(payload *models.ServiceUnavailable) *CreateOrMergeTimeseriesServiceUnavailable {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create or merge timeseries service unavailable response
func (o *CreateOrMergeTimeseriesServiceUnavailable) SetPayload(payload *models.ServiceUnavailable) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateOrMergeTimeseriesServiceUnavailable) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(503)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*
CreateOrMergeTimeseriesDefault Other error with any status code and response body format.

swagger:response createOrMergeTimeseriesDefault
*/
type CreateOrMergeTimeseriesDefault struct {
	_statusCode int
}

// NewCreateOrMergeTimeseriesDefault creates CreateOrMergeTimeseriesDefault with default headers values
func NewCreateOrMergeTimeseriesDefault(code int) *CreateOrMergeTimeseriesDefault {
	if code <= 0 {
		code = 500
	}

	return &CreateOrMergeTimeseriesDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the create or merge timeseries default response
func (o *CreateOrMergeTimeseriesDefault) WithStatusCode(code int) *CreateOrMergeTimeseriesDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the create or merge timeseries default response
func (o *CreateOrMergeTimeseriesDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WriteResponse to the client
func (o *CreateOrMergeTimeseriesDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(o._statusCode)
}
