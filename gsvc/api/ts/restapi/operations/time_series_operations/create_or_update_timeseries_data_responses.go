// Code generated by go-swagger; DO NOT EDIT.

package time_series_operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/swag"

	"gsvc/api/ts/models"
)

// CreateOrUpdateTimeseriesDataNoContentCode is the HTTP code returned for type CreateOrUpdateTimeseriesDataNoContent
const CreateOrUpdateTimeseriesDataNoContentCode int = 204

/*
CreateOrUpdateTimeseriesDataNoContent timeseries written

swagger:response createOrUpdateTimeseriesDataNoContent
*/
type CreateOrUpdateTimeseriesDataNoContent struct {
}

// NewCreateOrUpdateTimeseriesDataNoContent creates CreateOrUpdateTimeseriesDataNoContent with default headers values
func NewCreateOrUpdateTimeseriesDataNoContent() *CreateOrUpdateTimeseriesDataNoContent {

	return &CreateOrUpdateTimeseriesDataNoContent{}
}

// WriteResponse to the client
func (o *CreateOrUpdateTimeseriesDataNoContent) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(204)
}

// CreateOrUpdateTimeseriesDataBadRequestCode is the HTTP code returned for type CreateOrUpdateTimeseriesDataBadRequest
const CreateOrUpdateTimeseriesDataBadRequestCode int = 400

/*
CreateOrUpdateTimeseriesDataBadRequest bad request

swagger:response createOrUpdateTimeseriesDataBadRequest
*/
type CreateOrUpdateTimeseriesDataBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.BadRequest `json:"body,omitempty"`
}

// NewCreateOrUpdateTimeseriesDataBadRequest creates CreateOrUpdateTimeseriesDataBadRequest with default headers values
func NewCreateOrUpdateTimeseriesDataBadRequest() *CreateOrUpdateTimeseriesDataBadRequest {

	return &CreateOrUpdateTimeseriesDataBadRequest{}
}

// WithPayload adds the payload to the create or update timeseries data bad request response
func (o *CreateOrUpdateTimeseriesDataBadRequest) WithPayload(payload *models.BadRequest) *CreateOrUpdateTimeseriesDataBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create or update timeseries data bad request response
func (o *CreateOrUpdateTimeseriesDataBadRequest) SetPayload(payload *models.BadRequest) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateOrUpdateTimeseriesDataBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CreateOrUpdateTimeseriesDataUnauthorizedCode is the HTTP code returned for type CreateOrUpdateTimeseriesDataUnauthorized
const CreateOrUpdateTimeseriesDataUnauthorizedCode int = 401

/*
CreateOrUpdateTimeseriesDataUnauthorized unauthorized

swagger:response createOrUpdateTimeseriesDataUnauthorized
*/
type CreateOrUpdateTimeseriesDataUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.Unauthorized `json:"body,omitempty"`
}

// NewCreateOrUpdateTimeseriesDataUnauthorized creates CreateOrUpdateTimeseriesDataUnauthorized with default headers values
func NewCreateOrUpdateTimeseriesDataUnauthorized() *CreateOrUpdateTimeseriesDataUnauthorized {

	return &CreateOrUpdateTimeseriesDataUnauthorized{}
}

// WithPayload adds the payload to the create or update timeseries data unauthorized response
func (o *CreateOrUpdateTimeseriesDataUnauthorized) WithPayload(payload *models.Unauthorized) *CreateOrUpdateTimeseriesDataUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create or update timeseries data unauthorized response
func (o *CreateOrUpdateTimeseriesDataUnauthorized) SetPayload(payload *models.Unauthorized) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateOrUpdateTimeseriesDataUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CreateOrUpdateTimeseriesDataForbiddenCode is the HTTP code returned for type CreateOrUpdateTimeseriesDataForbidden
const CreateOrUpdateTimeseriesDataForbiddenCode int = 403

/*
CreateOrUpdateTimeseriesDataForbidden Forbidden

swagger:response createOrUpdateTimeseriesDataForbidden
*/
type CreateOrUpdateTimeseriesDataForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.Forbidden `json:"body,omitempty"`
}

// NewCreateOrUpdateTimeseriesDataForbidden creates CreateOrUpdateTimeseriesDataForbidden with default headers values
func NewCreateOrUpdateTimeseriesDataForbidden() *CreateOrUpdateTimeseriesDataForbidden {

	return &CreateOrUpdateTimeseriesDataForbidden{}
}

// WithPayload adds the payload to the create or update timeseries data forbidden response
func (o *CreateOrUpdateTimeseriesDataForbidden) WithPayload(payload *models.Forbidden) *CreateOrUpdateTimeseriesDataForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create or update timeseries data forbidden response
func (o *CreateOrUpdateTimeseriesDataForbidden) SetPayload(payload *models.Forbidden) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateOrUpdateTimeseriesDataForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CreateOrUpdateTimeseriesDataNotFoundCode is the HTTP code returned for type CreateOrUpdateTimeseriesDataNotFound
const CreateOrUpdateTimeseriesDataNotFoundCode int = 404

/*
CreateOrUpdateTimeseriesDataNotFound asset (entity) not found

swagger:response createOrUpdateTimeseriesDataNotFound
*/
type CreateOrUpdateTimeseriesDataNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.NotFound `json:"body,omitempty"`
}

// NewCreateOrUpdateTimeseriesDataNotFound creates CreateOrUpdateTimeseriesDataNotFound with default headers values
func NewCreateOrUpdateTimeseriesDataNotFound() *CreateOrUpdateTimeseriesDataNotFound {

	return &CreateOrUpdateTimeseriesDataNotFound{}
}

// WithPayload adds the payload to the create or update timeseries data not found response
func (o *CreateOrUpdateTimeseriesDataNotFound) WithPayload(payload *models.NotFound) *CreateOrUpdateTimeseriesDataNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create or update timeseries data not found response
func (o *CreateOrUpdateTimeseriesDataNotFound) SetPayload(payload *models.NotFound) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateOrUpdateTimeseriesDataNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CreateOrUpdateTimeseriesDataTooManyRequestsCode is the HTTP code returned for type CreateOrUpdateTimeseriesDataTooManyRequests
const CreateOrUpdateTimeseriesDataTooManyRequestsCode int = 429

/*
CreateOrUpdateTimeseriesDataTooManyRequests too many requests

	A Retry-After header might be included to this response indicating how long in 'seconds' to wait before making a new request.

swagger:response createOrUpdateTimeseriesDataTooManyRequests
*/
type CreateOrUpdateTimeseriesDataTooManyRequests struct {
	/*Time in seconds to wait before making a new request

	 */
	RetryAfter int64 `json:"Retry-After"`

	/*
	  In: Body
	*/
	Payload *models.TooManyRequests `json:"body,omitempty"`
}

// NewCreateOrUpdateTimeseriesDataTooManyRequests creates CreateOrUpdateTimeseriesDataTooManyRequests with default headers values
func NewCreateOrUpdateTimeseriesDataTooManyRequests() *CreateOrUpdateTimeseriesDataTooManyRequests {

	return &CreateOrUpdateTimeseriesDataTooManyRequests{}
}

// WithRetryAfter adds the retryAfter to the create or update timeseries data too many requests response
func (o *CreateOrUpdateTimeseriesDataTooManyRequests) WithRetryAfter(retryAfter int64) *CreateOrUpdateTimeseriesDataTooManyRequests {
	o.RetryAfter = retryAfter
	return o
}

// SetRetryAfter sets the retryAfter to the create or update timeseries data too many requests response
func (o *CreateOrUpdateTimeseriesDataTooManyRequests) SetRetryAfter(retryAfter int64) {
	o.RetryAfter = retryAfter
}

// WithPayload adds the payload to the create or update timeseries data too many requests response
func (o *CreateOrUpdateTimeseriesDataTooManyRequests) WithPayload(payload *models.TooManyRequests) *CreateOrUpdateTimeseriesDataTooManyRequests {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create or update timeseries data too many requests response
func (o *CreateOrUpdateTimeseriesDataTooManyRequests) SetPayload(payload *models.TooManyRequests) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateOrUpdateTimeseriesDataTooManyRequests) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	// response header Retry-After

	retryAfter := swag.FormatInt64(o.RetryAfter)
	if retryAfter != "" {
		rw.Header().Set("Retry-After", retryAfter)
	}

	rw.WriteHeader(429)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CreateOrUpdateTimeseriesDataServiceUnavailableCode is the HTTP code returned for type CreateOrUpdateTimeseriesDataServiceUnavailable
const CreateOrUpdateTimeseriesDataServiceUnavailableCode int = 503

/*
CreateOrUpdateTimeseriesDataServiceUnavailable Service unavailable

swagger:response createOrUpdateTimeseriesDataServiceUnavailable
*/
type CreateOrUpdateTimeseriesDataServiceUnavailable struct {

	/*
	  In: Body
	*/
	Payload *models.ServiceUnavailable `json:"body,omitempty"`
}

// NewCreateOrUpdateTimeseriesDataServiceUnavailable creates CreateOrUpdateTimeseriesDataServiceUnavailable with default headers values
func NewCreateOrUpdateTimeseriesDataServiceUnavailable() *CreateOrUpdateTimeseriesDataServiceUnavailable {

	return &CreateOrUpdateTimeseriesDataServiceUnavailable{}
}

// WithPayload adds the payload to the create or update timeseries data service unavailable response
func (o *CreateOrUpdateTimeseriesDataServiceUnavailable) WithPayload(payload *models.ServiceUnavailable) *CreateOrUpdateTimeseriesDataServiceUnavailable {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create or update timeseries data service unavailable response
func (o *CreateOrUpdateTimeseriesDataServiceUnavailable) SetPayload(payload *models.ServiceUnavailable) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateOrUpdateTimeseriesDataServiceUnavailable) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(503)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*
CreateOrUpdateTimeseriesDataDefault Other error with any status code and response body format.

swagger:response createOrUpdateTimeseriesDataDefault
*/
type CreateOrUpdateTimeseriesDataDefault struct {
	_statusCode int
}

// NewCreateOrUpdateTimeseriesDataDefault creates CreateOrUpdateTimeseriesDataDefault with default headers values
func NewCreateOrUpdateTimeseriesDataDefault(code int) *CreateOrUpdateTimeseriesDataDefault {
	if code <= 0 {
		code = 500
	}

	return &CreateOrUpdateTimeseriesDataDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the create or update timeseries data default response
func (o *CreateOrUpdateTimeseriesDataDefault) WithStatusCode(code int) *CreateOrUpdateTimeseriesDataDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the create or update timeseries data default response
func (o *CreateOrUpdateTimeseriesDataDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WriteResponse to the client
func (o *CreateOrUpdateTimeseriesDataDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(o._statusCode)
}
