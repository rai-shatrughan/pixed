// Code generated by go-swagger; DO NOT EDIT.

package assettype

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"gsvc/api/am/models"
)

// UpdateAssetTypeOKCode is the HTTP code returned for type UpdateAssetTypeOK
const UpdateAssetTypeOKCode int = 200

/*
UpdateAssetTypeOK The asset type has been updated

swagger:response updateAssetTypeOK
*/
type UpdateAssetTypeOK struct {

	/*
	  In: Body
	*/
	Payload *models.AssetTypeResource `json:"body,omitempty"`
}

// NewUpdateAssetTypeOK creates UpdateAssetTypeOK with default headers values
func NewUpdateAssetTypeOK() *UpdateAssetTypeOK {

	return &UpdateAssetTypeOK{}
}

// WithPayload adds the payload to the update asset type o k response
func (o *UpdateAssetTypeOK) WithPayload(payload *models.AssetTypeResource) *UpdateAssetTypeOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update asset type o k response
func (o *UpdateAssetTypeOK) SetPayload(payload *models.AssetTypeResource) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateAssetTypeOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateAssetTypeBadRequestCode is the HTTP code returned for type UpdateAssetTypeBadRequest
const UpdateAssetTypeBadRequestCode int = 400

/*
UpdateAssetTypeBadRequest Invalid request

swagger:response updateAssetTypeBadRequest
*/
type UpdateAssetTypeBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Errors `json:"body,omitempty"`
}

// NewUpdateAssetTypeBadRequest creates UpdateAssetTypeBadRequest with default headers values
func NewUpdateAssetTypeBadRequest() *UpdateAssetTypeBadRequest {

	return &UpdateAssetTypeBadRequest{}
}

// WithPayload adds the payload to the update asset type bad request response
func (o *UpdateAssetTypeBadRequest) WithPayload(payload *models.Errors) *UpdateAssetTypeBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update asset type bad request response
func (o *UpdateAssetTypeBadRequest) SetPayload(payload *models.Errors) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateAssetTypeBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateAssetTypeUnauthorizedCode is the HTTP code returned for type UpdateAssetTypeUnauthorized
const UpdateAssetTypeUnauthorizedCode int = 401

/*
UpdateAssetTypeUnauthorized User is not authenticated

swagger:response updateAssetTypeUnauthorized
*/
type UpdateAssetTypeUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.Errors `json:"body,omitempty"`
}

// NewUpdateAssetTypeUnauthorized creates UpdateAssetTypeUnauthorized with default headers values
func NewUpdateAssetTypeUnauthorized() *UpdateAssetTypeUnauthorized {

	return &UpdateAssetTypeUnauthorized{}
}

// WithPayload adds the payload to the update asset type unauthorized response
func (o *UpdateAssetTypeUnauthorized) WithPayload(payload *models.Errors) *UpdateAssetTypeUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update asset type unauthorized response
func (o *UpdateAssetTypeUnauthorized) SetPayload(payload *models.Errors) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateAssetTypeUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateAssetTypeForbiddenCode is the HTTP code returned for type UpdateAssetTypeForbidden
const UpdateAssetTypeForbiddenCode int = 403

/*
UpdateAssetTypeForbidden User is not authorized for request

swagger:response updateAssetTypeForbidden
*/
type UpdateAssetTypeForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.Errors `json:"body,omitempty"`
}

// NewUpdateAssetTypeForbidden creates UpdateAssetTypeForbidden with default headers values
func NewUpdateAssetTypeForbidden() *UpdateAssetTypeForbidden {

	return &UpdateAssetTypeForbidden{}
}

// WithPayload adds the payload to the update asset type forbidden response
func (o *UpdateAssetTypeForbidden) WithPayload(payload *models.Errors) *UpdateAssetTypeForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update asset type forbidden response
func (o *UpdateAssetTypeForbidden) SetPayload(payload *models.Errors) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateAssetTypeForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateAssetTypeNotFoundCode is the HTTP code returned for type UpdateAssetTypeNotFound
const UpdateAssetTypeNotFoundCode int = 404

/*
UpdateAssetTypeNotFound AssetType not found

swagger:response updateAssetTypeNotFound
*/
type UpdateAssetTypeNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Errors `json:"body,omitempty"`
}

// NewUpdateAssetTypeNotFound creates UpdateAssetTypeNotFound with default headers values
func NewUpdateAssetTypeNotFound() *UpdateAssetTypeNotFound {

	return &UpdateAssetTypeNotFound{}
}

// WithPayload adds the payload to the update asset type not found response
func (o *UpdateAssetTypeNotFound) WithPayload(payload *models.Errors) *UpdateAssetTypeNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update asset type not found response
func (o *UpdateAssetTypeNotFound) SetPayload(payload *models.Errors) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateAssetTypeNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateAssetTypePreconditionFailedCode is the HTTP code returned for type UpdateAssetTypePreconditionFailed
const UpdateAssetTypePreconditionFailedCode int = 412

/*
UpdateAssetTypePreconditionFailed AssetType is changed in the background

swagger:response updateAssetTypePreconditionFailed
*/
type UpdateAssetTypePreconditionFailed struct {

	/*
	  In: Body
	*/
	Payload *models.Errors `json:"body,omitempty"`
}

// NewUpdateAssetTypePreconditionFailed creates UpdateAssetTypePreconditionFailed with default headers values
func NewUpdateAssetTypePreconditionFailed() *UpdateAssetTypePreconditionFailed {

	return &UpdateAssetTypePreconditionFailed{}
}

// WithPayload adds the payload to the update asset type precondition failed response
func (o *UpdateAssetTypePreconditionFailed) WithPayload(payload *models.Errors) *UpdateAssetTypePreconditionFailed {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update asset type precondition failed response
func (o *UpdateAssetTypePreconditionFailed) SetPayload(payload *models.Errors) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateAssetTypePreconditionFailed) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(412)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateAssetTypeInternalServerErrorCode is the HTTP code returned for type UpdateAssetTypeInternalServerError
const UpdateAssetTypeInternalServerErrorCode int = 500

/*
UpdateAssetTypeInternalServerError Server error, for more information see errorcode and message

swagger:response updateAssetTypeInternalServerError
*/
type UpdateAssetTypeInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Errors `json:"body,omitempty"`
}

// NewUpdateAssetTypeInternalServerError creates UpdateAssetTypeInternalServerError with default headers values
func NewUpdateAssetTypeInternalServerError() *UpdateAssetTypeInternalServerError {

	return &UpdateAssetTypeInternalServerError{}
}

// WithPayload adds the payload to the update asset type internal server error response
func (o *UpdateAssetTypeInternalServerError) WithPayload(payload *models.Errors) *UpdateAssetTypeInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update asset type internal server error response
func (o *UpdateAssetTypeInternalServerError) SetPayload(payload *models.Errors) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateAssetTypeInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
