// Code generated by go-swagger; DO NOT EDIT.

package files

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"gsvc/api/am/models"
)

// GetFileOKCode is the HTTP code returned for type GetFileOK
const GetFileOKCode int = 200

/*
GetFileOK Returns the file's metadata

swagger:response getFileOK
*/
type GetFileOK struct {

	/*
	  In: Body
	*/
	Payload *models.FileMetadataResource `json:"body,omitempty"`
}

// NewGetFileOK creates GetFileOK with default headers values
func NewGetFileOK() *GetFileOK {

	return &GetFileOK{}
}

// WithPayload adds the payload to the get file o k response
func (o *GetFileOK) WithPayload(payload *models.FileMetadataResource) *GetFileOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get file o k response
func (o *GetFileOK) SetPayload(payload *models.FileMetadataResource) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetFileOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetFileNotModifiedCode is the HTTP code returned for type GetFileNotModified
const GetFileNotModifiedCode int = 304

/*
GetFileNotModified Resource have not been modified

swagger:response getFileNotModified
*/
type GetFileNotModified struct {
}

// NewGetFileNotModified creates GetFileNotModified with default headers values
func NewGetFileNotModified() *GetFileNotModified {

	return &GetFileNotModified{}
}

// WriteResponse to the client
func (o *GetFileNotModified) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(304)
}

// GetFileUnauthorizedCode is the HTTP code returned for type GetFileUnauthorized
const GetFileUnauthorizedCode int = 401

/*
GetFileUnauthorized User is not authenticated

swagger:response getFileUnauthorized
*/
type GetFileUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.Errors `json:"body,omitempty"`
}

// NewGetFileUnauthorized creates GetFileUnauthorized with default headers values
func NewGetFileUnauthorized() *GetFileUnauthorized {

	return &GetFileUnauthorized{}
}

// WithPayload adds the payload to the get file unauthorized response
func (o *GetFileUnauthorized) WithPayload(payload *models.Errors) *GetFileUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get file unauthorized response
func (o *GetFileUnauthorized) SetPayload(payload *models.Errors) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetFileUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetFileForbiddenCode is the HTTP code returned for type GetFileForbidden
const GetFileForbiddenCode int = 403

/*
GetFileForbidden User is not authorized for request

swagger:response getFileForbidden
*/
type GetFileForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.Errors `json:"body,omitempty"`
}

// NewGetFileForbidden creates GetFileForbidden with default headers values
func NewGetFileForbidden() *GetFileForbidden {

	return &GetFileForbidden{}
}

// WithPayload adds the payload to the get file forbidden response
func (o *GetFileForbidden) WithPayload(payload *models.Errors) *GetFileForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get file forbidden response
func (o *GetFileForbidden) SetPayload(payload *models.Errors) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetFileForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetFileNotFoundCode is the HTTP code returned for type GetFileNotFound
const GetFileNotFoundCode int = 404

/*
GetFileNotFound File not found

swagger:response getFileNotFound
*/
type GetFileNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Errors `json:"body,omitempty"`
}

// NewGetFileNotFound creates GetFileNotFound with default headers values
func NewGetFileNotFound() *GetFileNotFound {

	return &GetFileNotFound{}
}

// WithPayload adds the payload to the get file not found response
func (o *GetFileNotFound) WithPayload(payload *models.Errors) *GetFileNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get file not found response
func (o *GetFileNotFound) SetPayload(payload *models.Errors) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetFileNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetFileInternalServerErrorCode is the HTTP code returned for type GetFileInternalServerError
const GetFileInternalServerErrorCode int = 500

/*
GetFileInternalServerError Server error, for more information see errorcode and message

swagger:response getFileInternalServerError
*/
type GetFileInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Errors `json:"body,omitempty"`
}

// NewGetFileInternalServerError creates GetFileInternalServerError with default headers values
func NewGetFileInternalServerError() *GetFileInternalServerError {

	return &GetFileInternalServerError{}
}

// WithPayload adds the payload to the get file internal server error response
func (o *GetFileInternalServerError) WithPayload(payload *models.Errors) *GetFileInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get file internal server error response
func (o *GetFileInternalServerError) SetPayload(payload *models.Errors) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetFileInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
