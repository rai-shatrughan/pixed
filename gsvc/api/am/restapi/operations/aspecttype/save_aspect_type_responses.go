// Code generated by go-swagger; DO NOT EDIT.

package aspecttype

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"gsvc/api/am/models"
)

// SaveAspectTypeOKCode is the HTTP code returned for type SaveAspectTypeOK
const SaveAspectTypeOKCode int = 200

/*
SaveAspectTypeOK The aspect type has been updated

swagger:response saveAspectTypeOK
*/
type SaveAspectTypeOK struct {

	/*
	  In: Body
	*/
	Payload *models.AspectTypeResource `json:"body,omitempty"`
}

// NewSaveAspectTypeOK creates SaveAspectTypeOK with default headers values
func NewSaveAspectTypeOK() *SaveAspectTypeOK {

	return &SaveAspectTypeOK{}
}

// WithPayload adds the payload to the save aspect type o k response
func (o *SaveAspectTypeOK) WithPayload(payload *models.AspectTypeResource) *SaveAspectTypeOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the save aspect type o k response
func (o *SaveAspectTypeOK) SetPayload(payload *models.AspectTypeResource) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *SaveAspectTypeOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// SaveAspectTypeCreatedCode is the HTTP code returned for type SaveAspectTypeCreated
const SaveAspectTypeCreatedCode int = 201

/*
SaveAspectTypeCreated The aspect type has been created

swagger:response saveAspectTypeCreated
*/
type SaveAspectTypeCreated struct {

	/*
	  In: Body
	*/
	Payload *models.AspectTypeResource `json:"body,omitempty"`
}

// NewSaveAspectTypeCreated creates SaveAspectTypeCreated with default headers values
func NewSaveAspectTypeCreated() *SaveAspectTypeCreated {

	return &SaveAspectTypeCreated{}
}

// WithPayload adds the payload to the save aspect type created response
func (o *SaveAspectTypeCreated) WithPayload(payload *models.AspectTypeResource) *SaveAspectTypeCreated {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the save aspect type created response
func (o *SaveAspectTypeCreated) SetPayload(payload *models.AspectTypeResource) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *SaveAspectTypeCreated) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(201)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// SaveAspectTypeBadRequestCode is the HTTP code returned for type SaveAspectTypeBadRequest
const SaveAspectTypeBadRequestCode int = 400

/*
SaveAspectTypeBadRequest Invalid request

swagger:response saveAspectTypeBadRequest
*/
type SaveAspectTypeBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Errors `json:"body,omitempty"`
}

// NewSaveAspectTypeBadRequest creates SaveAspectTypeBadRequest with default headers values
func NewSaveAspectTypeBadRequest() *SaveAspectTypeBadRequest {

	return &SaveAspectTypeBadRequest{}
}

// WithPayload adds the payload to the save aspect type bad request response
func (o *SaveAspectTypeBadRequest) WithPayload(payload *models.Errors) *SaveAspectTypeBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the save aspect type bad request response
func (o *SaveAspectTypeBadRequest) SetPayload(payload *models.Errors) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *SaveAspectTypeBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// SaveAspectTypeUnauthorizedCode is the HTTP code returned for type SaveAspectTypeUnauthorized
const SaveAspectTypeUnauthorizedCode int = 401

/*
SaveAspectTypeUnauthorized User is not authenticated

swagger:response saveAspectTypeUnauthorized
*/
type SaveAspectTypeUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.Errors `json:"body,omitempty"`
}

// NewSaveAspectTypeUnauthorized creates SaveAspectTypeUnauthorized with default headers values
func NewSaveAspectTypeUnauthorized() *SaveAspectTypeUnauthorized {

	return &SaveAspectTypeUnauthorized{}
}

// WithPayload adds the payload to the save aspect type unauthorized response
func (o *SaveAspectTypeUnauthorized) WithPayload(payload *models.Errors) *SaveAspectTypeUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the save aspect type unauthorized response
func (o *SaveAspectTypeUnauthorized) SetPayload(payload *models.Errors) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *SaveAspectTypeUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// SaveAspectTypeForbiddenCode is the HTTP code returned for type SaveAspectTypeForbidden
const SaveAspectTypeForbiddenCode int = 403

/*
SaveAspectTypeForbidden User is not authorized for request

swagger:response saveAspectTypeForbidden
*/
type SaveAspectTypeForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.Errors `json:"body,omitempty"`
}

// NewSaveAspectTypeForbidden creates SaveAspectTypeForbidden with default headers values
func NewSaveAspectTypeForbidden() *SaveAspectTypeForbidden {

	return &SaveAspectTypeForbidden{}
}

// WithPayload adds the payload to the save aspect type forbidden response
func (o *SaveAspectTypeForbidden) WithPayload(payload *models.Errors) *SaveAspectTypeForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the save aspect type forbidden response
func (o *SaveAspectTypeForbidden) SetPayload(payload *models.Errors) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *SaveAspectTypeForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// SaveAspectTypeNotFoundCode is the HTTP code returned for type SaveAspectTypeNotFound
const SaveAspectTypeNotFoundCode int = 404

/*
SaveAspectTypeNotFound AspectType not found

swagger:response saveAspectTypeNotFound
*/
type SaveAspectTypeNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Errors `json:"body,omitempty"`
}

// NewSaveAspectTypeNotFound creates SaveAspectTypeNotFound with default headers values
func NewSaveAspectTypeNotFound() *SaveAspectTypeNotFound {

	return &SaveAspectTypeNotFound{}
}

// WithPayload adds the payload to the save aspect type not found response
func (o *SaveAspectTypeNotFound) WithPayload(payload *models.Errors) *SaveAspectTypeNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the save aspect type not found response
func (o *SaveAspectTypeNotFound) SetPayload(payload *models.Errors) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *SaveAspectTypeNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// SaveAspectTypePreconditionFailedCode is the HTTP code returned for type SaveAspectTypePreconditionFailed
const SaveAspectTypePreconditionFailedCode int = 412

/*
SaveAspectTypePreconditionFailed AspectType is changed in the background

swagger:response saveAspectTypePreconditionFailed
*/
type SaveAspectTypePreconditionFailed struct {

	/*
	  In: Body
	*/
	Payload *models.Errors `json:"body,omitempty"`
}

// NewSaveAspectTypePreconditionFailed creates SaveAspectTypePreconditionFailed with default headers values
func NewSaveAspectTypePreconditionFailed() *SaveAspectTypePreconditionFailed {

	return &SaveAspectTypePreconditionFailed{}
}

// WithPayload adds the payload to the save aspect type precondition failed response
func (o *SaveAspectTypePreconditionFailed) WithPayload(payload *models.Errors) *SaveAspectTypePreconditionFailed {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the save aspect type precondition failed response
func (o *SaveAspectTypePreconditionFailed) SetPayload(payload *models.Errors) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *SaveAspectTypePreconditionFailed) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(412)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// SaveAspectTypeInternalServerErrorCode is the HTTP code returned for type SaveAspectTypeInternalServerError
const SaveAspectTypeInternalServerErrorCode int = 500

/*
SaveAspectTypeInternalServerError Server error, for more information see errorcode and message

swagger:response saveAspectTypeInternalServerError
*/
type SaveAspectTypeInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Errors `json:"body,omitempty"`
}

// NewSaveAspectTypeInternalServerError creates SaveAspectTypeInternalServerError with default headers values
func NewSaveAspectTypeInternalServerError() *SaveAspectTypeInternalServerError {

	return &SaveAspectTypeInternalServerError{}
}

// WithPayload adds the payload to the save aspect type internal server error response
func (o *SaveAspectTypeInternalServerError) WithPayload(payload *models.Errors) *SaveAspectTypeInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the save aspect type internal server error response
func (o *SaveAspectTypeInternalServerError) SetPayload(payload *models.Errors) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *SaveAspectTypeInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
