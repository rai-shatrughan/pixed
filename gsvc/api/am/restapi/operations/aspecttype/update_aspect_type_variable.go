// Code generated by go-swagger; DO NOT EDIT.

package aspecttype

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"

	"gsvc/api/am/models"
)

// UpdateAspectTypeVariableHandlerFunc turns a function with the right signature into a update aspect type variable handler
type UpdateAspectTypeVariableHandlerFunc func(UpdateAspectTypeVariableParams, *models.Principal) middleware.Responder

// Handle executing the request and returning a response
func (fn UpdateAspectTypeVariableHandlerFunc) Handle(params UpdateAspectTypeVariableParams, principal *models.Principal) middleware.Responder {
	return fn(params, principal)
}

// UpdateAspectTypeVariableHandler interface for that can handle valid update aspect type variable params
type UpdateAspectTypeVariableHandler interface {
	Handle(UpdateAspectTypeVariableParams, *models.Principal) middleware.Responder
}

// NewUpdateAspectTypeVariable creates a new http.Handler for the update aspect type variable operation
func NewUpdateAspectTypeVariable(ctx *middleware.Context, handler UpdateAspectTypeVariableHandler) *UpdateAspectTypeVariable {
	return &UpdateAspectTypeVariable{Context: ctx, Handler: handler}
}

/*
	UpdateAspectTypeVariable swagger:route PATCH /aspecttypes/{id}/variables aspecttype updateAspectTypeVariable

patch aspect type variables

Updates an existing variable defined on an aspect type. Variables can be added, deleted and updated using this operation. Any variable which is not part of the request will remain unchanged. All variable names must be unique in a aspect type. This operation will increment the aspect type etag value.

<b>Following are the updates allowed on existing variables</b>
* Variable's Name, Length, Default Value and Unit can be changed.
* The unit changes from the api does not compute any value changes derived after the unit changes, the values will remain as it is and only the unit will be updated.
* The length can only be increased of a string variable and it cannot be decreased.
*/
type UpdateAspectTypeVariable struct {
	Context *middleware.Context
	Handler UpdateAspectTypeVariableHandler
}

func (o *UpdateAspectTypeVariable) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		*r = *rCtx
	}
	var Params = NewUpdateAspectTypeVariableParams()
	uprinc, aCtx, err := o.Context.Authorize(r, route)
	if err != nil {
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}
	if aCtx != nil {
		*r = *aCtx
	}
	var principal *models.Principal
	if uprinc != nil {
		principal = uprinc.(*models.Principal) // this is really a models.Principal, I promise
	}

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params, principal) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}
