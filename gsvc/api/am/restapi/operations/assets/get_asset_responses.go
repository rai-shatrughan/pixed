// Code generated by go-swagger; DO NOT EDIT.

package assets

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"gsvc/api/am/models"
)

// GetAssetOKCode is the HTTP code returned for type GetAssetOK
const GetAssetOKCode int = 200

/*
GetAssetOK Returns an asset with its static properties.

swagger:response getAssetOK
*/
type GetAssetOK struct {
	/*ETag hash of the resource

	 */
	ETag string `json:"ETag"`

	/*
	  In: Body
	*/
	Payload *models.AssetResourceWithHierarchyPath `json:"body,omitempty"`
}

// NewGetAssetOK creates GetAssetOK with default headers values
func NewGetAssetOK() *GetAssetOK {

	return &GetAssetOK{}
}

// WithETag adds the eTag to the get asset o k response
func (o *GetAssetOK) WithETag(eTag string) *GetAssetOK {
	o.ETag = eTag
	return o
}

// SetETag sets the eTag to the get asset o k response
func (o *GetAssetOK) SetETag(eTag string) {
	o.ETag = eTag
}

// WithPayload adds the payload to the get asset o k response
func (o *GetAssetOK) WithPayload(payload *models.AssetResourceWithHierarchyPath) *GetAssetOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get asset o k response
func (o *GetAssetOK) SetPayload(payload *models.AssetResourceWithHierarchyPath) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetAssetOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	// response header ETag

	eTag := o.ETag
	if eTag != "" {
		rw.Header().Set("ETag", eTag)
	}

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetAssetNotModifiedCode is the HTTP code returned for type GetAssetNotModified
const GetAssetNotModifiedCode int = 304

/*
GetAssetNotModified Resource asset is not modified

swagger:response getAssetNotModified
*/
type GetAssetNotModified struct {
}

// NewGetAssetNotModified creates GetAssetNotModified with default headers values
func NewGetAssetNotModified() *GetAssetNotModified {

	return &GetAssetNotModified{}
}

// WriteResponse to the client
func (o *GetAssetNotModified) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(304)
}

// GetAssetUnauthorizedCode is the HTTP code returned for type GetAssetUnauthorized
const GetAssetUnauthorizedCode int = 401

/*
GetAssetUnauthorized User is not authenticated

swagger:response getAssetUnauthorized
*/
type GetAssetUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.Errors `json:"body,omitempty"`
}

// NewGetAssetUnauthorized creates GetAssetUnauthorized with default headers values
func NewGetAssetUnauthorized() *GetAssetUnauthorized {

	return &GetAssetUnauthorized{}
}

// WithPayload adds the payload to the get asset unauthorized response
func (o *GetAssetUnauthorized) WithPayload(payload *models.Errors) *GetAssetUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get asset unauthorized response
func (o *GetAssetUnauthorized) SetPayload(payload *models.Errors) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetAssetUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetAssetForbiddenCode is the HTTP code returned for type GetAssetForbidden
const GetAssetForbiddenCode int = 403

/*
GetAssetForbidden User is not authorized for request

swagger:response getAssetForbidden
*/
type GetAssetForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.Errors `json:"body,omitempty"`
}

// NewGetAssetForbidden creates GetAssetForbidden with default headers values
func NewGetAssetForbidden() *GetAssetForbidden {

	return &GetAssetForbidden{}
}

// WithPayload adds the payload to the get asset forbidden response
func (o *GetAssetForbidden) WithPayload(payload *models.Errors) *GetAssetForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get asset forbidden response
func (o *GetAssetForbidden) SetPayload(payload *models.Errors) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetAssetForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetAssetNotFoundCode is the HTTP code returned for type GetAssetNotFound
const GetAssetNotFoundCode int = 404

/*
GetAssetNotFound Not found

swagger:response getAssetNotFound
*/
type GetAssetNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Errors `json:"body,omitempty"`
}

// NewGetAssetNotFound creates GetAssetNotFound with default headers values
func NewGetAssetNotFound() *GetAssetNotFound {

	return &GetAssetNotFound{}
}

// WithPayload adds the payload to the get asset not found response
func (o *GetAssetNotFound) WithPayload(payload *models.Errors) *GetAssetNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get asset not found response
func (o *GetAssetNotFound) SetPayload(payload *models.Errors) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetAssetNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetAssetInternalServerErrorCode is the HTTP code returned for type GetAssetInternalServerError
const GetAssetInternalServerErrorCode int = 500

/*
GetAssetInternalServerError Server error, for more information see errorcode and message

swagger:response getAssetInternalServerError
*/
type GetAssetInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Errors `json:"body,omitempty"`
}

// NewGetAssetInternalServerError creates GetAssetInternalServerError with default headers values
func NewGetAssetInternalServerError() *GetAssetInternalServerError {

	return &GetAssetInternalServerError{}
}

// WithPayload adds the payload to the get asset internal server error response
func (o *GetAssetInternalServerError) WithPayload(payload *models.Errors) *GetAssetInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get asset internal server error response
func (o *GetAssetInternalServerError) SetPayload(payload *models.Errors) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetAssetInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetAssetServiceUnavailableCode is the HTTP code returned for type GetAssetServiceUnavailable
const GetAssetServiceUnavailableCode int = 503

/*
GetAssetServiceUnavailable Service unavailable, for more information see errorcode and message

swagger:response getAssetServiceUnavailable
*/
type GetAssetServiceUnavailable struct {

	/*
	  In: Body
	*/
	Payload *models.Errors `json:"body,omitempty"`
}

// NewGetAssetServiceUnavailable creates GetAssetServiceUnavailable with default headers values
func NewGetAssetServiceUnavailable() *GetAssetServiceUnavailable {

	return &GetAssetServiceUnavailable{}
}

// WithPayload adds the payload to the get asset service unavailable response
func (o *GetAssetServiceUnavailable) WithPayload(payload *models.Errors) *GetAssetServiceUnavailable {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get asset service unavailable response
func (o *GetAssetServiceUnavailable) SetPayload(payload *models.Errors) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetAssetServiceUnavailable) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(503)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
