// Code generated by go-swagger; DO NOT EDIT.

package assets

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"gsvc/api/am/models"
)

// ListAssetsOKCode is the HTTP code returned for type ListAssetsOK
const ListAssetsOKCode int = 200

/*
ListAssetsOK Array of assets matched the tenant scope and filter criterias

swagger:response listAssetsOK
*/
type ListAssetsOK struct {
	/*The hash of the response's content

	 */
	ETag string `json:"ETag"`

	/*
	  In: Body
	*/
	Payload *models.AssetListResource `json:"body,omitempty"`
}

// NewListAssetsOK creates ListAssetsOK with default headers values
func NewListAssetsOK() *ListAssetsOK {

	return &ListAssetsOK{}
}

// WithETag adds the eTag to the list assets o k response
func (o *ListAssetsOK) WithETag(eTag string) *ListAssetsOK {
	o.ETag = eTag
	return o
}

// SetETag sets the eTag to the list assets o k response
func (o *ListAssetsOK) SetETag(eTag string) {
	o.ETag = eTag
}

// WithPayload adds the payload to the list assets o k response
func (o *ListAssetsOK) WithPayload(payload *models.AssetListResource) *ListAssetsOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the list assets o k response
func (o *ListAssetsOK) SetPayload(payload *models.AssetListResource) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ListAssetsOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	// response header ETag

	eTag := o.ETag
	if eTag != "" {
		rw.Header().Set("ETag", eTag)
	}

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ListAssetsNotModifiedCode is the HTTP code returned for type ListAssetsNotModified
const ListAssetsNotModifiedCode int = 304

/*
ListAssetsNotModified The answer's content has not changed since the last request

swagger:response listAssetsNotModified
*/
type ListAssetsNotModified struct {
}

// NewListAssetsNotModified creates ListAssetsNotModified with default headers values
func NewListAssetsNotModified() *ListAssetsNotModified {

	return &ListAssetsNotModified{}
}

// WriteResponse to the client
func (o *ListAssetsNotModified) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(304)
}

// ListAssetsBadRequestCode is the HTTP code returned for type ListAssetsBadRequest
const ListAssetsBadRequestCode int = 400

/*
ListAssetsBadRequest Invalid request

swagger:response listAssetsBadRequest
*/
type ListAssetsBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Errors `json:"body,omitempty"`
}

// NewListAssetsBadRequest creates ListAssetsBadRequest with default headers values
func NewListAssetsBadRequest() *ListAssetsBadRequest {

	return &ListAssetsBadRequest{}
}

// WithPayload adds the payload to the list assets bad request response
func (o *ListAssetsBadRequest) WithPayload(payload *models.Errors) *ListAssetsBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the list assets bad request response
func (o *ListAssetsBadRequest) SetPayload(payload *models.Errors) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ListAssetsBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ListAssetsUnauthorizedCode is the HTTP code returned for type ListAssetsUnauthorized
const ListAssetsUnauthorizedCode int = 401

/*
ListAssetsUnauthorized User is not authenticated

swagger:response listAssetsUnauthorized
*/
type ListAssetsUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.Errors `json:"body,omitempty"`
}

// NewListAssetsUnauthorized creates ListAssetsUnauthorized with default headers values
func NewListAssetsUnauthorized() *ListAssetsUnauthorized {

	return &ListAssetsUnauthorized{}
}

// WithPayload adds the payload to the list assets unauthorized response
func (o *ListAssetsUnauthorized) WithPayload(payload *models.Errors) *ListAssetsUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the list assets unauthorized response
func (o *ListAssetsUnauthorized) SetPayload(payload *models.Errors) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ListAssetsUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ListAssetsForbiddenCode is the HTTP code returned for type ListAssetsForbidden
const ListAssetsForbiddenCode int = 403

/*
ListAssetsForbidden User is not authorized for request

swagger:response listAssetsForbidden
*/
type ListAssetsForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.Errors `json:"body,omitempty"`
}

// NewListAssetsForbidden creates ListAssetsForbidden with default headers values
func NewListAssetsForbidden() *ListAssetsForbidden {

	return &ListAssetsForbidden{}
}

// WithPayload adds the payload to the list assets forbidden response
func (o *ListAssetsForbidden) WithPayload(payload *models.Errors) *ListAssetsForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the list assets forbidden response
func (o *ListAssetsForbidden) SetPayload(payload *models.Errors) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ListAssetsForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ListAssetsInternalServerErrorCode is the HTTP code returned for type ListAssetsInternalServerError
const ListAssetsInternalServerErrorCode int = 500

/*
ListAssetsInternalServerError Server error, for more information see errorcode and message

swagger:response listAssetsInternalServerError
*/
type ListAssetsInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Errors `json:"body,omitempty"`
}

// NewListAssetsInternalServerError creates ListAssetsInternalServerError with default headers values
func NewListAssetsInternalServerError() *ListAssetsInternalServerError {

	return &ListAssetsInternalServerError{}
}

// WithPayload adds the payload to the list assets internal server error response
func (o *ListAssetsInternalServerError) WithPayload(payload *models.Errors) *ListAssetsInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the list assets internal server error response
func (o *ListAssetsInternalServerError) SetPayload(payload *models.Errors) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ListAssetsInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ListAssetsServiceUnavailableCode is the HTTP code returned for type ListAssetsServiceUnavailable
const ListAssetsServiceUnavailableCode int = 503

/*
ListAssetsServiceUnavailable Service unavailable, for more information see errorcode and message

swagger:response listAssetsServiceUnavailable
*/
type ListAssetsServiceUnavailable struct {

	/*
	  In: Body
	*/
	Payload *models.Errors `json:"body,omitempty"`
}

// NewListAssetsServiceUnavailable creates ListAssetsServiceUnavailable with default headers values
func NewListAssetsServiceUnavailable() *ListAssetsServiceUnavailable {

	return &ListAssetsServiceUnavailable{}
}

// WithPayload adds the payload to the list assets service unavailable response
func (o *ListAssetsServiceUnavailable) WithPayload(payload *models.Errors) *ListAssetsServiceUnavailable {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the list assets service unavailable response
func (o *ListAssetsServiceUnavailable) SetPayload(payload *models.Errors) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ListAssetsServiceUnavailable) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(503)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
