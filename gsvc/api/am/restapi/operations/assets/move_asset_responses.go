// Code generated by go-swagger; DO NOT EDIT.

package assets

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"gsvc/api/am/models"
)

// MoveAssetOKCode is the HTTP code returned for type MoveAssetOK
const MoveAssetOKCode int = 200

/*
MoveAssetOK The asset is moved

swagger:response moveAssetOK
*/
type MoveAssetOK struct {

	/*
	  In: Body
	*/
	Payload *models.AssetResourceWithHierarchyPath `json:"body,omitempty"`
}

// NewMoveAssetOK creates MoveAssetOK with default headers values
func NewMoveAssetOK() *MoveAssetOK {

	return &MoveAssetOK{}
}

// WithPayload adds the payload to the move asset o k response
func (o *MoveAssetOK) WithPayload(payload *models.AssetResourceWithHierarchyPath) *MoveAssetOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the move asset o k response
func (o *MoveAssetOK) SetPayload(payload *models.AssetResourceWithHierarchyPath) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *MoveAssetOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// MoveAssetBadRequestCode is the HTTP code returned for type MoveAssetBadRequest
const MoveAssetBadRequestCode int = 400

/*
MoveAssetBadRequest Invalid request

swagger:response moveAssetBadRequest
*/
type MoveAssetBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Errors `json:"body,omitempty"`
}

// NewMoveAssetBadRequest creates MoveAssetBadRequest with default headers values
func NewMoveAssetBadRequest() *MoveAssetBadRequest {

	return &MoveAssetBadRequest{}
}

// WithPayload adds the payload to the move asset bad request response
func (o *MoveAssetBadRequest) WithPayload(payload *models.Errors) *MoveAssetBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the move asset bad request response
func (o *MoveAssetBadRequest) SetPayload(payload *models.Errors) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *MoveAssetBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// MoveAssetUnauthorizedCode is the HTTP code returned for type MoveAssetUnauthorized
const MoveAssetUnauthorizedCode int = 401

/*
MoveAssetUnauthorized User is not authenticated

swagger:response moveAssetUnauthorized
*/
type MoveAssetUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.Errors `json:"body,omitempty"`
}

// NewMoveAssetUnauthorized creates MoveAssetUnauthorized with default headers values
func NewMoveAssetUnauthorized() *MoveAssetUnauthorized {

	return &MoveAssetUnauthorized{}
}

// WithPayload adds the payload to the move asset unauthorized response
func (o *MoveAssetUnauthorized) WithPayload(payload *models.Errors) *MoveAssetUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the move asset unauthorized response
func (o *MoveAssetUnauthorized) SetPayload(payload *models.Errors) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *MoveAssetUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// MoveAssetForbiddenCode is the HTTP code returned for type MoveAssetForbidden
const MoveAssetForbiddenCode int = 403

/*
MoveAssetForbidden User is not authorized for request

swagger:response moveAssetForbidden
*/
type MoveAssetForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.Errors `json:"body,omitempty"`
}

// NewMoveAssetForbidden creates MoveAssetForbidden with default headers values
func NewMoveAssetForbidden() *MoveAssetForbidden {

	return &MoveAssetForbidden{}
}

// WithPayload adds the payload to the move asset forbidden response
func (o *MoveAssetForbidden) WithPayload(payload *models.Errors) *MoveAssetForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the move asset forbidden response
func (o *MoveAssetForbidden) SetPayload(payload *models.Errors) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *MoveAssetForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// MoveAssetNotFoundCode is the HTTP code returned for type MoveAssetNotFound
const MoveAssetNotFoundCode int = 404

/*
MoveAssetNotFound Asset not found

swagger:response moveAssetNotFound
*/
type MoveAssetNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Errors `json:"body,omitempty"`
}

// NewMoveAssetNotFound creates MoveAssetNotFound with default headers values
func NewMoveAssetNotFound() *MoveAssetNotFound {

	return &MoveAssetNotFound{}
}

// WithPayload adds the payload to the move asset not found response
func (o *MoveAssetNotFound) WithPayload(payload *models.Errors) *MoveAssetNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the move asset not found response
func (o *MoveAssetNotFound) SetPayload(payload *models.Errors) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *MoveAssetNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// MoveAssetPreconditionFailedCode is the HTTP code returned for type MoveAssetPreconditionFailed
const MoveAssetPreconditionFailedCode int = 412

/*
MoveAssetPreconditionFailed Asset is changed in the background

swagger:response moveAssetPreconditionFailed
*/
type MoveAssetPreconditionFailed struct {

	/*
	  In: Body
	*/
	Payload *models.Errors `json:"body,omitempty"`
}

// NewMoveAssetPreconditionFailed creates MoveAssetPreconditionFailed with default headers values
func NewMoveAssetPreconditionFailed() *MoveAssetPreconditionFailed {

	return &MoveAssetPreconditionFailed{}
}

// WithPayload adds the payload to the move asset precondition failed response
func (o *MoveAssetPreconditionFailed) WithPayload(payload *models.Errors) *MoveAssetPreconditionFailed {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the move asset precondition failed response
func (o *MoveAssetPreconditionFailed) SetPayload(payload *models.Errors) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *MoveAssetPreconditionFailed) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(412)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// MoveAssetInternalServerErrorCode is the HTTP code returned for type MoveAssetInternalServerError
const MoveAssetInternalServerErrorCode int = 500

/*
MoveAssetInternalServerError Server error, for more information see errorcode and message

swagger:response moveAssetInternalServerError
*/
type MoveAssetInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Errors `json:"body,omitempty"`
}

// NewMoveAssetInternalServerError creates MoveAssetInternalServerError with default headers values
func NewMoveAssetInternalServerError() *MoveAssetInternalServerError {

	return &MoveAssetInternalServerError{}
}

// WithPayload adds the payload to the move asset internal server error response
func (o *MoveAssetInternalServerError) WithPayload(payload *models.Errors) *MoveAssetInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the move asset internal server error response
func (o *MoveAssetInternalServerError) SetPayload(payload *models.Errors) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *MoveAssetInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// MoveAssetServiceUnavailableCode is the HTTP code returned for type MoveAssetServiceUnavailable
const MoveAssetServiceUnavailableCode int = 503

/*
MoveAssetServiceUnavailable Service unavailable, for more information see errorcode and message

swagger:response moveAssetServiceUnavailable
*/
type MoveAssetServiceUnavailable struct {

	/*
	  In: Body
	*/
	Payload *models.Errors `json:"body,omitempty"`
}

// NewMoveAssetServiceUnavailable creates MoveAssetServiceUnavailable with default headers values
func NewMoveAssetServiceUnavailable() *MoveAssetServiceUnavailable {

	return &MoveAssetServiceUnavailable{}
}

// WithPayload adds the payload to the move asset service unavailable response
func (o *MoveAssetServiceUnavailable) WithPayload(payload *models.Errors) *MoveAssetServiceUnavailable {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the move asset service unavailable response
func (o *MoveAssetServiceUnavailable) SetPayload(payload *models.Errors) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *MoveAssetServiceUnavailable) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(503)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
