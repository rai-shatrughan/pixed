// Code generated by go-swagger; DO NOT EDIT.

package record_recovery

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"gsvc/api/mc/models"
)

// GetRecoverableRecordsIDDownloadLinkOKCode is the HTTP code returned for type GetRecoverableRecordsIDDownloadLinkOK
const GetRecoverableRecordsIDDownloadLinkOKCode int = 200

/*
GetRecoverableRecordsIDDownloadLinkOK OK

swagger:response getRecoverableRecordsIdDownloadLinkOK
*/
type GetRecoverableRecordsIDDownloadLinkOK struct {

	/*
	  In: Body
	*/
	Payload strfmt.URI `json:"body,omitempty"`
}

// NewGetRecoverableRecordsIDDownloadLinkOK creates GetRecoverableRecordsIDDownloadLinkOK with default headers values
func NewGetRecoverableRecordsIDDownloadLinkOK() *GetRecoverableRecordsIDDownloadLinkOK {

	return &GetRecoverableRecordsIDDownloadLinkOK{}
}

// WithPayload adds the payload to the get recoverable records Id download link o k response
func (o *GetRecoverableRecordsIDDownloadLinkOK) WithPayload(payload strfmt.URI) *GetRecoverableRecordsIDDownloadLinkOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get recoverable records Id download link o k response
func (o *GetRecoverableRecordsIDDownloadLinkOK) SetPayload(payload strfmt.URI) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetRecoverableRecordsIDDownloadLinkOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// GetRecoverableRecordsIDDownloadLinkBadRequestCode is the HTTP code returned for type GetRecoverableRecordsIDDownloadLinkBadRequest
const GetRecoverableRecordsIDDownloadLinkBadRequestCode int = 400

/*
GetRecoverableRecordsIDDownloadLinkBadRequest Bad Request

swagger:response getRecoverableRecordsIdDownloadLinkBadRequest
*/
type GetRecoverableRecordsIDDownloadLinkBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Badrequest `json:"body,omitempty"`
}

// NewGetRecoverableRecordsIDDownloadLinkBadRequest creates GetRecoverableRecordsIDDownloadLinkBadRequest with default headers values
func NewGetRecoverableRecordsIDDownloadLinkBadRequest() *GetRecoverableRecordsIDDownloadLinkBadRequest {

	return &GetRecoverableRecordsIDDownloadLinkBadRequest{}
}

// WithPayload adds the payload to the get recoverable records Id download link bad request response
func (o *GetRecoverableRecordsIDDownloadLinkBadRequest) WithPayload(payload *models.Badrequest) *GetRecoverableRecordsIDDownloadLinkBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get recoverable records Id download link bad request response
func (o *GetRecoverableRecordsIDDownloadLinkBadRequest) SetPayload(payload *models.Badrequest) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetRecoverableRecordsIDDownloadLinkBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetRecoverableRecordsIDDownloadLinkUnauthorizedCode is the HTTP code returned for type GetRecoverableRecordsIDDownloadLinkUnauthorized
const GetRecoverableRecordsIDDownloadLinkUnauthorizedCode int = 401

/*
GetRecoverableRecordsIDDownloadLinkUnauthorized Unauthorized

swagger:response getRecoverableRecordsIdDownloadLinkUnauthorized
*/
type GetRecoverableRecordsIDDownloadLinkUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.Unauthorized `json:"body,omitempty"`
}

// NewGetRecoverableRecordsIDDownloadLinkUnauthorized creates GetRecoverableRecordsIDDownloadLinkUnauthorized with default headers values
func NewGetRecoverableRecordsIDDownloadLinkUnauthorized() *GetRecoverableRecordsIDDownloadLinkUnauthorized {

	return &GetRecoverableRecordsIDDownloadLinkUnauthorized{}
}

// WithPayload adds the payload to the get recoverable records Id download link unauthorized response
func (o *GetRecoverableRecordsIDDownloadLinkUnauthorized) WithPayload(payload *models.Unauthorized) *GetRecoverableRecordsIDDownloadLinkUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get recoverable records Id download link unauthorized response
func (o *GetRecoverableRecordsIDDownloadLinkUnauthorized) SetPayload(payload *models.Unauthorized) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetRecoverableRecordsIDDownloadLinkUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetRecoverableRecordsIDDownloadLinkForbiddenCode is the HTTP code returned for type GetRecoverableRecordsIDDownloadLinkForbidden
const GetRecoverableRecordsIDDownloadLinkForbiddenCode int = 403

/*
GetRecoverableRecordsIDDownloadLinkForbidden Forbidden

swagger:response getRecoverableRecordsIdDownloadLinkForbidden
*/
type GetRecoverableRecordsIDDownloadLinkForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.Forbidden `json:"body,omitempty"`
}

// NewGetRecoverableRecordsIDDownloadLinkForbidden creates GetRecoverableRecordsIDDownloadLinkForbidden with default headers values
func NewGetRecoverableRecordsIDDownloadLinkForbidden() *GetRecoverableRecordsIDDownloadLinkForbidden {

	return &GetRecoverableRecordsIDDownloadLinkForbidden{}
}

// WithPayload adds the payload to the get recoverable records Id download link forbidden response
func (o *GetRecoverableRecordsIDDownloadLinkForbidden) WithPayload(payload *models.Forbidden) *GetRecoverableRecordsIDDownloadLinkForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get recoverable records Id download link forbidden response
func (o *GetRecoverableRecordsIDDownloadLinkForbidden) SetPayload(payload *models.Forbidden) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetRecoverableRecordsIDDownloadLinkForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetRecoverableRecordsIDDownloadLinkNotFoundCode is the HTTP code returned for type GetRecoverableRecordsIDDownloadLinkNotFound
const GetRecoverableRecordsIDDownloadLinkNotFoundCode int = 404

/*
GetRecoverableRecordsIDDownloadLinkNotFound Not Found

swagger:response getRecoverableRecordsIdDownloadLinkNotFound
*/
type GetRecoverableRecordsIDDownloadLinkNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Notfound `json:"body,omitempty"`
}

// NewGetRecoverableRecordsIDDownloadLinkNotFound creates GetRecoverableRecordsIDDownloadLinkNotFound with default headers values
func NewGetRecoverableRecordsIDDownloadLinkNotFound() *GetRecoverableRecordsIDDownloadLinkNotFound {

	return &GetRecoverableRecordsIDDownloadLinkNotFound{}
}

// WithPayload adds the payload to the get recoverable records Id download link not found response
func (o *GetRecoverableRecordsIDDownloadLinkNotFound) WithPayload(payload *models.Notfound) *GetRecoverableRecordsIDDownloadLinkNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get recoverable records Id download link not found response
func (o *GetRecoverableRecordsIDDownloadLinkNotFound) SetPayload(payload *models.Notfound) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetRecoverableRecordsIDDownloadLinkNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*
GetRecoverableRecordsIDDownloadLinkDefault unexpected error

swagger:response getRecoverableRecordsIdDownloadLinkDefault
*/
type GetRecoverableRecordsIDDownloadLinkDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetRecoverableRecordsIDDownloadLinkDefault creates GetRecoverableRecordsIDDownloadLinkDefault with default headers values
func NewGetRecoverableRecordsIDDownloadLinkDefault(code int) *GetRecoverableRecordsIDDownloadLinkDefault {
	if code <= 0 {
		code = 500
	}

	return &GetRecoverableRecordsIDDownloadLinkDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the get recoverable records ID download link default response
func (o *GetRecoverableRecordsIDDownloadLinkDefault) WithStatusCode(code int) *GetRecoverableRecordsIDDownloadLinkDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the get recoverable records ID download link default response
func (o *GetRecoverableRecordsIDDownloadLinkDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the get recoverable records ID download link default response
func (o *GetRecoverableRecordsIDDownloadLinkDefault) WithPayload(payload *models.Error) *GetRecoverableRecordsIDDownloadLinkDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get recoverable records ID download link default response
func (o *GetRecoverableRecordsIDDownloadLinkDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetRecoverableRecordsIDDownloadLinkDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
