// Code generated by go-swagger; DO NOT EDIT.

package record_recovery

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"gsvc/api/mc/models"
)

// DeleteRecoverableRecordsIDNoContentCode is the HTTP code returned for type DeleteRecoverableRecordsIDNoContent
const DeleteRecoverableRecordsIDNoContentCode int = 204

/*
DeleteRecoverableRecordsIDNoContent Deleted

swagger:response deleteRecoverableRecordsIdNoContent
*/
type DeleteRecoverableRecordsIDNoContent struct {
}

// NewDeleteRecoverableRecordsIDNoContent creates DeleteRecoverableRecordsIDNoContent with default headers values
func NewDeleteRecoverableRecordsIDNoContent() *DeleteRecoverableRecordsIDNoContent {

	return &DeleteRecoverableRecordsIDNoContent{}
}

// WriteResponse to the client
func (o *DeleteRecoverableRecordsIDNoContent) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(204)
}

// DeleteRecoverableRecordsIDBadRequestCode is the HTTP code returned for type DeleteRecoverableRecordsIDBadRequest
const DeleteRecoverableRecordsIDBadRequestCode int = 400

/*
DeleteRecoverableRecordsIDBadRequest Bad Request

swagger:response deleteRecoverableRecordsIdBadRequest
*/
type DeleteRecoverableRecordsIDBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Badrequest `json:"body,omitempty"`
}

// NewDeleteRecoverableRecordsIDBadRequest creates DeleteRecoverableRecordsIDBadRequest with default headers values
func NewDeleteRecoverableRecordsIDBadRequest() *DeleteRecoverableRecordsIDBadRequest {

	return &DeleteRecoverableRecordsIDBadRequest{}
}

// WithPayload adds the payload to the delete recoverable records Id bad request response
func (o *DeleteRecoverableRecordsIDBadRequest) WithPayload(payload *models.Badrequest) *DeleteRecoverableRecordsIDBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete recoverable records Id bad request response
func (o *DeleteRecoverableRecordsIDBadRequest) SetPayload(payload *models.Badrequest) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteRecoverableRecordsIDBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DeleteRecoverableRecordsIDUnauthorizedCode is the HTTP code returned for type DeleteRecoverableRecordsIDUnauthorized
const DeleteRecoverableRecordsIDUnauthorizedCode int = 401

/*
DeleteRecoverableRecordsIDUnauthorized unauthorized

swagger:response deleteRecoverableRecordsIdUnauthorized
*/
type DeleteRecoverableRecordsIDUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.Unauthorized `json:"body,omitempty"`
}

// NewDeleteRecoverableRecordsIDUnauthorized creates DeleteRecoverableRecordsIDUnauthorized with default headers values
func NewDeleteRecoverableRecordsIDUnauthorized() *DeleteRecoverableRecordsIDUnauthorized {

	return &DeleteRecoverableRecordsIDUnauthorized{}
}

// WithPayload adds the payload to the delete recoverable records Id unauthorized response
func (o *DeleteRecoverableRecordsIDUnauthorized) WithPayload(payload *models.Unauthorized) *DeleteRecoverableRecordsIDUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete recoverable records Id unauthorized response
func (o *DeleteRecoverableRecordsIDUnauthorized) SetPayload(payload *models.Unauthorized) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteRecoverableRecordsIDUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DeleteRecoverableRecordsIDForbiddenCode is the HTTP code returned for type DeleteRecoverableRecordsIDForbidden
const DeleteRecoverableRecordsIDForbiddenCode int = 403

/*
DeleteRecoverableRecordsIDForbidden Forbidden

swagger:response deleteRecoverableRecordsIdForbidden
*/
type DeleteRecoverableRecordsIDForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.Forbidden `json:"body,omitempty"`
}

// NewDeleteRecoverableRecordsIDForbidden creates DeleteRecoverableRecordsIDForbidden with default headers values
func NewDeleteRecoverableRecordsIDForbidden() *DeleteRecoverableRecordsIDForbidden {

	return &DeleteRecoverableRecordsIDForbidden{}
}

// WithPayload adds the payload to the delete recoverable records Id forbidden response
func (o *DeleteRecoverableRecordsIDForbidden) WithPayload(payload *models.Forbidden) *DeleteRecoverableRecordsIDForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete recoverable records Id forbidden response
func (o *DeleteRecoverableRecordsIDForbidden) SetPayload(payload *models.Forbidden) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteRecoverableRecordsIDForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DeleteRecoverableRecordsIDNotFoundCode is the HTTP code returned for type DeleteRecoverableRecordsIDNotFound
const DeleteRecoverableRecordsIDNotFoundCode int = 404

/*
DeleteRecoverableRecordsIDNotFound Recoverable record not found

swagger:response deleteRecoverableRecordsIdNotFound
*/
type DeleteRecoverableRecordsIDNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Notfound `json:"body,omitempty"`
}

// NewDeleteRecoverableRecordsIDNotFound creates DeleteRecoverableRecordsIDNotFound with default headers values
func NewDeleteRecoverableRecordsIDNotFound() *DeleteRecoverableRecordsIDNotFound {

	return &DeleteRecoverableRecordsIDNotFound{}
}

// WithPayload adds the payload to the delete recoverable records Id not found response
func (o *DeleteRecoverableRecordsIDNotFound) WithPayload(payload *models.Notfound) *DeleteRecoverableRecordsIDNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete recoverable records Id not found response
func (o *DeleteRecoverableRecordsIDNotFound) SetPayload(payload *models.Notfound) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteRecoverableRecordsIDNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*
DeleteRecoverableRecordsIDDefault unexpected error

swagger:response deleteRecoverableRecordsIdDefault
*/
type DeleteRecoverableRecordsIDDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewDeleteRecoverableRecordsIDDefault creates DeleteRecoverableRecordsIDDefault with default headers values
func NewDeleteRecoverableRecordsIDDefault(code int) *DeleteRecoverableRecordsIDDefault {
	if code <= 0 {
		code = 500
	}

	return &DeleteRecoverableRecordsIDDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the delete recoverable records ID default response
func (o *DeleteRecoverableRecordsIDDefault) WithStatusCode(code int) *DeleteRecoverableRecordsIDDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the delete recoverable records ID default response
func (o *DeleteRecoverableRecordsIDDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the delete recoverable records ID default response
func (o *DeleteRecoverableRecordsIDDefault) WithPayload(payload *models.Error) *DeleteRecoverableRecordsIDDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete recoverable records ID default response
func (o *DeleteRecoverableRecordsIDDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteRecoverableRecordsIDDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
