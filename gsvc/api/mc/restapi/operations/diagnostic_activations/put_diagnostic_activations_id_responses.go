// Code generated by go-swagger; DO NOT EDIT.

package diagnostic_activations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"gsvc/api/mc/models"
)

// PutDiagnosticActivationsIDOKCode is the HTTP code returned for type PutDiagnosticActivationsIDOK
const PutDiagnosticActivationsIDOKCode int = 200

/*
PutDiagnosticActivationsIDOK OK

swagger:response putDiagnosticActivationsIdOK
*/
type PutDiagnosticActivationsIDOK struct {

	/*
	  In: Body
	*/
	Payload *models.DiagnosticActivation `json:"body,omitempty"`
}

// NewPutDiagnosticActivationsIDOK creates PutDiagnosticActivationsIDOK with default headers values
func NewPutDiagnosticActivationsIDOK() *PutDiagnosticActivationsIDOK {

	return &PutDiagnosticActivationsIDOK{}
}

// WithPayload adds the payload to the put diagnostic activations Id o k response
func (o *PutDiagnosticActivationsIDOK) WithPayload(payload *models.DiagnosticActivation) *PutDiagnosticActivationsIDOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the put diagnostic activations Id o k response
func (o *PutDiagnosticActivationsIDOK) SetPayload(payload *models.DiagnosticActivation) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PutDiagnosticActivationsIDOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PutDiagnosticActivationsIDBadRequestCode is the HTTP code returned for type PutDiagnosticActivationsIDBadRequest
const PutDiagnosticActivationsIDBadRequestCode int = 400

/*
PutDiagnosticActivationsIDBadRequest Bad Request

swagger:response putDiagnosticActivationsIdBadRequest
*/
type PutDiagnosticActivationsIDBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Badrequest `json:"body,omitempty"`
}

// NewPutDiagnosticActivationsIDBadRequest creates PutDiagnosticActivationsIDBadRequest with default headers values
func NewPutDiagnosticActivationsIDBadRequest() *PutDiagnosticActivationsIDBadRequest {

	return &PutDiagnosticActivationsIDBadRequest{}
}

// WithPayload adds the payload to the put diagnostic activations Id bad request response
func (o *PutDiagnosticActivationsIDBadRequest) WithPayload(payload *models.Badrequest) *PutDiagnosticActivationsIDBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the put diagnostic activations Id bad request response
func (o *PutDiagnosticActivationsIDBadRequest) SetPayload(payload *models.Badrequest) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PutDiagnosticActivationsIDBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PutDiagnosticActivationsIDUnauthorizedCode is the HTTP code returned for type PutDiagnosticActivationsIDUnauthorized
const PutDiagnosticActivationsIDUnauthorizedCode int = 401

/*
PutDiagnosticActivationsIDUnauthorized Unauthorized

swagger:response putDiagnosticActivationsIdUnauthorized
*/
type PutDiagnosticActivationsIDUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.Unauthorized `json:"body,omitempty"`
}

// NewPutDiagnosticActivationsIDUnauthorized creates PutDiagnosticActivationsIDUnauthorized with default headers values
func NewPutDiagnosticActivationsIDUnauthorized() *PutDiagnosticActivationsIDUnauthorized {

	return &PutDiagnosticActivationsIDUnauthorized{}
}

// WithPayload adds the payload to the put diagnostic activations Id unauthorized response
func (o *PutDiagnosticActivationsIDUnauthorized) WithPayload(payload *models.Unauthorized) *PutDiagnosticActivationsIDUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the put diagnostic activations Id unauthorized response
func (o *PutDiagnosticActivationsIDUnauthorized) SetPayload(payload *models.Unauthorized) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PutDiagnosticActivationsIDUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PutDiagnosticActivationsIDForbiddenCode is the HTTP code returned for type PutDiagnosticActivationsIDForbidden
const PutDiagnosticActivationsIDForbiddenCode int = 403

/*
PutDiagnosticActivationsIDForbidden Forbidden

swagger:response putDiagnosticActivationsIdForbidden
*/
type PutDiagnosticActivationsIDForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.Forbidden `json:"body,omitempty"`
}

// NewPutDiagnosticActivationsIDForbidden creates PutDiagnosticActivationsIDForbidden with default headers values
func NewPutDiagnosticActivationsIDForbidden() *PutDiagnosticActivationsIDForbidden {

	return &PutDiagnosticActivationsIDForbidden{}
}

// WithPayload adds the payload to the put diagnostic activations Id forbidden response
func (o *PutDiagnosticActivationsIDForbidden) WithPayload(payload *models.Forbidden) *PutDiagnosticActivationsIDForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the put diagnostic activations Id forbidden response
func (o *PutDiagnosticActivationsIDForbidden) SetPayload(payload *models.Forbidden) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PutDiagnosticActivationsIDForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PutDiagnosticActivationsIDNotFoundCode is the HTTP code returned for type PutDiagnosticActivationsIDNotFound
const PutDiagnosticActivationsIDNotFoundCode int = 404

/*
PutDiagnosticActivationsIDNotFound Not Found

swagger:response putDiagnosticActivationsIdNotFound
*/
type PutDiagnosticActivationsIDNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Notfound `json:"body,omitempty"`
}

// NewPutDiagnosticActivationsIDNotFound creates PutDiagnosticActivationsIDNotFound with default headers values
func NewPutDiagnosticActivationsIDNotFound() *PutDiagnosticActivationsIDNotFound {

	return &PutDiagnosticActivationsIDNotFound{}
}

// WithPayload adds the payload to the put diagnostic activations Id not found response
func (o *PutDiagnosticActivationsIDNotFound) WithPayload(payload *models.Notfound) *PutDiagnosticActivationsIDNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the put diagnostic activations Id not found response
func (o *PutDiagnosticActivationsIDNotFound) SetPayload(payload *models.Notfound) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PutDiagnosticActivationsIDNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*
PutDiagnosticActivationsIDDefault unexpected error

swagger:response putDiagnosticActivationsIdDefault
*/
type PutDiagnosticActivationsIDDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPutDiagnosticActivationsIDDefault creates PutDiagnosticActivationsIDDefault with default headers values
func NewPutDiagnosticActivationsIDDefault(code int) *PutDiagnosticActivationsIDDefault {
	if code <= 0 {
		code = 500
	}

	return &PutDiagnosticActivationsIDDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the put diagnostic activations ID default response
func (o *PutDiagnosticActivationsIDDefault) WithStatusCode(code int) *PutDiagnosticActivationsIDDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the put diagnostic activations ID default response
func (o *PutDiagnosticActivationsIDDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the put diagnostic activations ID default response
func (o *PutDiagnosticActivationsIDDefault) WithPayload(payload *models.Error) *PutDiagnosticActivationsIDDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the put diagnostic activations ID default response
func (o *PutDiagnosticActivationsIDDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PutDiagnosticActivationsIDDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
