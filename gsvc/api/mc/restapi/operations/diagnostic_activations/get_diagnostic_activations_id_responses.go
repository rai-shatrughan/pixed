// Code generated by go-swagger; DO NOT EDIT.

package diagnostic_activations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"gsvc/api/mc/models"
)

// GetDiagnosticActivationsIDOKCode is the HTTP code returned for type GetDiagnosticActivationsIDOK
const GetDiagnosticActivationsIDOKCode int = 200

/*
GetDiagnosticActivationsIDOK OK

swagger:response getDiagnosticActivationsIdOK
*/
type GetDiagnosticActivationsIDOK struct {

	/*
	  In: Body
	*/
	Payload *models.DiagnosticActivation `json:"body,omitempty"`
}

// NewGetDiagnosticActivationsIDOK creates GetDiagnosticActivationsIDOK with default headers values
func NewGetDiagnosticActivationsIDOK() *GetDiagnosticActivationsIDOK {

	return &GetDiagnosticActivationsIDOK{}
}

// WithPayload adds the payload to the get diagnostic activations Id o k response
func (o *GetDiagnosticActivationsIDOK) WithPayload(payload *models.DiagnosticActivation) *GetDiagnosticActivationsIDOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get diagnostic activations Id o k response
func (o *GetDiagnosticActivationsIDOK) SetPayload(payload *models.DiagnosticActivation) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetDiagnosticActivationsIDOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetDiagnosticActivationsIDBadRequestCode is the HTTP code returned for type GetDiagnosticActivationsIDBadRequest
const GetDiagnosticActivationsIDBadRequestCode int = 400

/*
GetDiagnosticActivationsIDBadRequest Bad Request

swagger:response getDiagnosticActivationsIdBadRequest
*/
type GetDiagnosticActivationsIDBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Badrequest `json:"body,omitempty"`
}

// NewGetDiagnosticActivationsIDBadRequest creates GetDiagnosticActivationsIDBadRequest with default headers values
func NewGetDiagnosticActivationsIDBadRequest() *GetDiagnosticActivationsIDBadRequest {

	return &GetDiagnosticActivationsIDBadRequest{}
}

// WithPayload adds the payload to the get diagnostic activations Id bad request response
func (o *GetDiagnosticActivationsIDBadRequest) WithPayload(payload *models.Badrequest) *GetDiagnosticActivationsIDBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get diagnostic activations Id bad request response
func (o *GetDiagnosticActivationsIDBadRequest) SetPayload(payload *models.Badrequest) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetDiagnosticActivationsIDBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetDiagnosticActivationsIDUnauthorizedCode is the HTTP code returned for type GetDiagnosticActivationsIDUnauthorized
const GetDiagnosticActivationsIDUnauthorizedCode int = 401

/*
GetDiagnosticActivationsIDUnauthorized Unauthorized

swagger:response getDiagnosticActivationsIdUnauthorized
*/
type GetDiagnosticActivationsIDUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.Unauthorized `json:"body,omitempty"`
}

// NewGetDiagnosticActivationsIDUnauthorized creates GetDiagnosticActivationsIDUnauthorized with default headers values
func NewGetDiagnosticActivationsIDUnauthorized() *GetDiagnosticActivationsIDUnauthorized {

	return &GetDiagnosticActivationsIDUnauthorized{}
}

// WithPayload adds the payload to the get diagnostic activations Id unauthorized response
func (o *GetDiagnosticActivationsIDUnauthorized) WithPayload(payload *models.Unauthorized) *GetDiagnosticActivationsIDUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get diagnostic activations Id unauthorized response
func (o *GetDiagnosticActivationsIDUnauthorized) SetPayload(payload *models.Unauthorized) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetDiagnosticActivationsIDUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetDiagnosticActivationsIDForbiddenCode is the HTTP code returned for type GetDiagnosticActivationsIDForbidden
const GetDiagnosticActivationsIDForbiddenCode int = 403

/*
GetDiagnosticActivationsIDForbidden Forbidden

swagger:response getDiagnosticActivationsIdForbidden
*/
type GetDiagnosticActivationsIDForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.Forbidden `json:"body,omitempty"`
}

// NewGetDiagnosticActivationsIDForbidden creates GetDiagnosticActivationsIDForbidden with default headers values
func NewGetDiagnosticActivationsIDForbidden() *GetDiagnosticActivationsIDForbidden {

	return &GetDiagnosticActivationsIDForbidden{}
}

// WithPayload adds the payload to the get diagnostic activations Id forbidden response
func (o *GetDiagnosticActivationsIDForbidden) WithPayload(payload *models.Forbidden) *GetDiagnosticActivationsIDForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get diagnostic activations Id forbidden response
func (o *GetDiagnosticActivationsIDForbidden) SetPayload(payload *models.Forbidden) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetDiagnosticActivationsIDForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetDiagnosticActivationsIDNotFoundCode is the HTTP code returned for type GetDiagnosticActivationsIDNotFound
const GetDiagnosticActivationsIDNotFoundCode int = 404

/*
GetDiagnosticActivationsIDNotFound Not Found

swagger:response getDiagnosticActivationsIdNotFound
*/
type GetDiagnosticActivationsIDNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Notfound `json:"body,omitempty"`
}

// NewGetDiagnosticActivationsIDNotFound creates GetDiagnosticActivationsIDNotFound with default headers values
func NewGetDiagnosticActivationsIDNotFound() *GetDiagnosticActivationsIDNotFound {

	return &GetDiagnosticActivationsIDNotFound{}
}

// WithPayload adds the payload to the get diagnostic activations Id not found response
func (o *GetDiagnosticActivationsIDNotFound) WithPayload(payload *models.Notfound) *GetDiagnosticActivationsIDNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get diagnostic activations Id not found response
func (o *GetDiagnosticActivationsIDNotFound) SetPayload(payload *models.Notfound) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetDiagnosticActivationsIDNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*
GetDiagnosticActivationsIDDefault unexpected error

swagger:response getDiagnosticActivationsIdDefault
*/
type GetDiagnosticActivationsIDDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetDiagnosticActivationsIDDefault creates GetDiagnosticActivationsIDDefault with default headers values
func NewGetDiagnosticActivationsIDDefault(code int) *GetDiagnosticActivationsIDDefault {
	if code <= 0 {
		code = 500
	}

	return &GetDiagnosticActivationsIDDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the get diagnostic activations ID default response
func (o *GetDiagnosticActivationsIDDefault) WithStatusCode(code int) *GetDiagnosticActivationsIDDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the get diagnostic activations ID default response
func (o *GetDiagnosticActivationsIDDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the get diagnostic activations ID default response
func (o *GetDiagnosticActivationsIDDefault) WithPayload(payload *models.Error) *GetDiagnosticActivationsIDDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get diagnostic activations ID default response
func (o *GetDiagnosticActivationsIDDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetDiagnosticActivationsIDDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
