// Code generated by go-swagger; DO NOT EDIT.

package diagnostic_activations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"gsvc/api/mc/models"
)

// GetDiagnosticActivationsIDMessagesOKCode is the HTTP code returned for type GetDiagnosticActivationsIDMessagesOK
const GetDiagnosticActivationsIDMessagesOKCode int = 200

/*
GetDiagnosticActivationsIDMessagesOK OK

swagger:response getDiagnosticActivationsIdMessagesOK
*/
type GetDiagnosticActivationsIDMessagesOK struct {

	/*
	  In: Body
	*/
	Payload *models.PagedDiagnosticInformationMessages `json:"body,omitempty"`
}

// NewGetDiagnosticActivationsIDMessagesOK creates GetDiagnosticActivationsIDMessagesOK with default headers values
func NewGetDiagnosticActivationsIDMessagesOK() *GetDiagnosticActivationsIDMessagesOK {

	return &GetDiagnosticActivationsIDMessagesOK{}
}

// WithPayload adds the payload to the get diagnostic activations Id messages o k response
func (o *GetDiagnosticActivationsIDMessagesOK) WithPayload(payload *models.PagedDiagnosticInformationMessages) *GetDiagnosticActivationsIDMessagesOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get diagnostic activations Id messages o k response
func (o *GetDiagnosticActivationsIDMessagesOK) SetPayload(payload *models.PagedDiagnosticInformationMessages) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetDiagnosticActivationsIDMessagesOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetDiagnosticActivationsIDMessagesBadRequestCode is the HTTP code returned for type GetDiagnosticActivationsIDMessagesBadRequest
const GetDiagnosticActivationsIDMessagesBadRequestCode int = 400

/*
GetDiagnosticActivationsIDMessagesBadRequest Bad Request

swagger:response getDiagnosticActivationsIdMessagesBadRequest
*/
type GetDiagnosticActivationsIDMessagesBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Badrequest `json:"body,omitempty"`
}

// NewGetDiagnosticActivationsIDMessagesBadRequest creates GetDiagnosticActivationsIDMessagesBadRequest with default headers values
func NewGetDiagnosticActivationsIDMessagesBadRequest() *GetDiagnosticActivationsIDMessagesBadRequest {

	return &GetDiagnosticActivationsIDMessagesBadRequest{}
}

// WithPayload adds the payload to the get diagnostic activations Id messages bad request response
func (o *GetDiagnosticActivationsIDMessagesBadRequest) WithPayload(payload *models.Badrequest) *GetDiagnosticActivationsIDMessagesBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get diagnostic activations Id messages bad request response
func (o *GetDiagnosticActivationsIDMessagesBadRequest) SetPayload(payload *models.Badrequest) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetDiagnosticActivationsIDMessagesBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetDiagnosticActivationsIDMessagesUnauthorizedCode is the HTTP code returned for type GetDiagnosticActivationsIDMessagesUnauthorized
const GetDiagnosticActivationsIDMessagesUnauthorizedCode int = 401

/*
GetDiagnosticActivationsIDMessagesUnauthorized Unauthorized

swagger:response getDiagnosticActivationsIdMessagesUnauthorized
*/
type GetDiagnosticActivationsIDMessagesUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.Unauthorized `json:"body,omitempty"`
}

// NewGetDiagnosticActivationsIDMessagesUnauthorized creates GetDiagnosticActivationsIDMessagesUnauthorized with default headers values
func NewGetDiagnosticActivationsIDMessagesUnauthorized() *GetDiagnosticActivationsIDMessagesUnauthorized {

	return &GetDiagnosticActivationsIDMessagesUnauthorized{}
}

// WithPayload adds the payload to the get diagnostic activations Id messages unauthorized response
func (o *GetDiagnosticActivationsIDMessagesUnauthorized) WithPayload(payload *models.Unauthorized) *GetDiagnosticActivationsIDMessagesUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get diagnostic activations Id messages unauthorized response
func (o *GetDiagnosticActivationsIDMessagesUnauthorized) SetPayload(payload *models.Unauthorized) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetDiagnosticActivationsIDMessagesUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetDiagnosticActivationsIDMessagesForbiddenCode is the HTTP code returned for type GetDiagnosticActivationsIDMessagesForbidden
const GetDiagnosticActivationsIDMessagesForbiddenCode int = 403

/*
GetDiagnosticActivationsIDMessagesForbidden Forbidden

swagger:response getDiagnosticActivationsIdMessagesForbidden
*/
type GetDiagnosticActivationsIDMessagesForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.Forbidden `json:"body,omitempty"`
}

// NewGetDiagnosticActivationsIDMessagesForbidden creates GetDiagnosticActivationsIDMessagesForbidden with default headers values
func NewGetDiagnosticActivationsIDMessagesForbidden() *GetDiagnosticActivationsIDMessagesForbidden {

	return &GetDiagnosticActivationsIDMessagesForbidden{}
}

// WithPayload adds the payload to the get diagnostic activations Id messages forbidden response
func (o *GetDiagnosticActivationsIDMessagesForbidden) WithPayload(payload *models.Forbidden) *GetDiagnosticActivationsIDMessagesForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get diagnostic activations Id messages forbidden response
func (o *GetDiagnosticActivationsIDMessagesForbidden) SetPayload(payload *models.Forbidden) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetDiagnosticActivationsIDMessagesForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetDiagnosticActivationsIDMessagesNotFoundCode is the HTTP code returned for type GetDiagnosticActivationsIDMessagesNotFound
const GetDiagnosticActivationsIDMessagesNotFoundCode int = 404

/*
GetDiagnosticActivationsIDMessagesNotFound Not Found

swagger:response getDiagnosticActivationsIdMessagesNotFound
*/
type GetDiagnosticActivationsIDMessagesNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Notfound `json:"body,omitempty"`
}

// NewGetDiagnosticActivationsIDMessagesNotFound creates GetDiagnosticActivationsIDMessagesNotFound with default headers values
func NewGetDiagnosticActivationsIDMessagesNotFound() *GetDiagnosticActivationsIDMessagesNotFound {

	return &GetDiagnosticActivationsIDMessagesNotFound{}
}

// WithPayload adds the payload to the get diagnostic activations Id messages not found response
func (o *GetDiagnosticActivationsIDMessagesNotFound) WithPayload(payload *models.Notfound) *GetDiagnosticActivationsIDMessagesNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get diagnostic activations Id messages not found response
func (o *GetDiagnosticActivationsIDMessagesNotFound) SetPayload(payload *models.Notfound) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetDiagnosticActivationsIDMessagesNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*
GetDiagnosticActivationsIDMessagesDefault unexpected error

swagger:response getDiagnosticActivationsIdMessagesDefault
*/
type GetDiagnosticActivationsIDMessagesDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetDiagnosticActivationsIDMessagesDefault creates GetDiagnosticActivationsIDMessagesDefault with default headers values
func NewGetDiagnosticActivationsIDMessagesDefault(code int) *GetDiagnosticActivationsIDMessagesDefault {
	if code <= 0 {
		code = 500
	}

	return &GetDiagnosticActivationsIDMessagesDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the get diagnostic activations ID messages default response
func (o *GetDiagnosticActivationsIDMessagesDefault) WithStatusCode(code int) *GetDiagnosticActivationsIDMessagesDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the get diagnostic activations ID messages default response
func (o *GetDiagnosticActivationsIDMessagesDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the get diagnostic activations ID messages default response
func (o *GetDiagnosticActivationsIDMessagesDefault) WithPayload(payload *models.Error) *GetDiagnosticActivationsIDMessagesDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get diagnostic activations ID messages default response
func (o *GetDiagnosticActivationsIDMessagesDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetDiagnosticActivationsIDMessagesDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
