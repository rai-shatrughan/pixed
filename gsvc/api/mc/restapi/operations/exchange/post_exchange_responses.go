// Code generated by go-swagger; DO NOT EDIT.

package exchange

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"gsvc/api/mc/models"
)

// PostExchangeOKCode is the HTTP code returned for type PostExchangeOK
const PostExchangeOKCode int = 200

/*
PostExchangeOK OK

swagger:response postExchangeOK
*/
type PostExchangeOK struct {
}

// NewPostExchangeOK creates PostExchangeOK with default headers values
func NewPostExchangeOK() *PostExchangeOK {

	return &PostExchangeOK{}
}

// WriteResponse to the client
func (o *PostExchangeOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(200)
}

// PostExchangeBadRequestCode is the HTTP code returned for type PostExchangeBadRequest
const PostExchangeBadRequestCode int = 400

/*
PostExchangeBadRequest bad request, e.g. multi part body is not well formatted.

swagger:response postExchangeBadRequest
*/
type PostExchangeBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Badrequest `json:"body,omitempty"`
}

// NewPostExchangeBadRequest creates PostExchangeBadRequest with default headers values
func NewPostExchangeBadRequest() *PostExchangeBadRequest {

	return &PostExchangeBadRequest{}
}

// WithPayload adds the payload to the post exchange bad request response
func (o *PostExchangeBadRequest) WithPayload(payload *models.Badrequest) *PostExchangeBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post exchange bad request response
func (o *PostExchangeBadRequest) SetPayload(payload *models.Badrequest) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostExchangeBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostExchangeUnauthorizedCode is the HTTP code returned for type PostExchangeUnauthorized
const PostExchangeUnauthorizedCode int = 401

/*
PostExchangeUnauthorized unauthorized

swagger:response postExchangeUnauthorized
*/
type PostExchangeUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.Unauthorized `json:"body,omitempty"`
}

// NewPostExchangeUnauthorized creates PostExchangeUnauthorized with default headers values
func NewPostExchangeUnauthorized() *PostExchangeUnauthorized {

	return &PostExchangeUnauthorized{}
}

// WithPayload adds the payload to the post exchange unauthorized response
func (o *PostExchangeUnauthorized) WithPayload(payload *models.Unauthorized) *PostExchangeUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post exchange unauthorized response
func (o *PostExchangeUnauthorized) SetPayload(payload *models.Unauthorized) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostExchangeUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostExchangeForbiddenCode is the HTTP code returned for type PostExchangeForbidden
const PostExchangeForbiddenCode int = 403

/*
PostExchangeForbidden Forbidden

swagger:response postExchangeForbidden
*/
type PostExchangeForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.Forbidden `json:"body,omitempty"`
}

// NewPostExchangeForbidden creates PostExchangeForbidden with default headers values
func NewPostExchangeForbidden() *PostExchangeForbidden {

	return &PostExchangeForbidden{}
}

// WithPayload adds the payload to the post exchange forbidden response
func (o *PostExchangeForbidden) WithPayload(payload *models.Forbidden) *PostExchangeForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post exchange forbidden response
func (o *PostExchangeForbidden) SetPayload(payload *models.Forbidden) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostExchangeForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostExchangeRequestEntityTooLargeCode is the HTTP code returned for type PostExchangeRequestEntityTooLarge
const PostExchangeRequestEntityTooLargeCode int = 413

/*
PostExchangeRequestEntityTooLarge Payload Too Large

swagger:response postExchangeRequestEntityTooLarge
*/
type PostExchangeRequestEntityTooLarge struct {

	/*
	  In: Body
	*/
	Payload *models.PayLoadTooLarge `json:"body,omitempty"`
}

// NewPostExchangeRequestEntityTooLarge creates PostExchangeRequestEntityTooLarge with default headers values
func NewPostExchangeRequestEntityTooLarge() *PostExchangeRequestEntityTooLarge {

	return &PostExchangeRequestEntityTooLarge{}
}

// WithPayload adds the payload to the post exchange request entity too large response
func (o *PostExchangeRequestEntityTooLarge) WithPayload(payload *models.PayLoadTooLarge) *PostExchangeRequestEntityTooLarge {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post exchange request entity too large response
func (o *PostExchangeRequestEntityTooLarge) SetPayload(payload *models.PayLoadTooLarge) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostExchangeRequestEntityTooLarge) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(413)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*
PostExchangeDefault unexpected error

swagger:response postExchangeDefault
*/
type PostExchangeDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPostExchangeDefault creates PostExchangeDefault with default headers values
func NewPostExchangeDefault(code int) *PostExchangeDefault {
	if code <= 0 {
		code = 500
	}

	return &PostExchangeDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the post exchange default response
func (o *PostExchangeDefault) WithStatusCode(code int) *PostExchangeDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the post exchange default response
func (o *PostExchangeDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the post exchange default response
func (o *PostExchangeDefault) WithPayload(payload *models.Error) *PostExchangeDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post exchange default response
func (o *PostExchangeDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostExchangeDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
