version: "2.2"

services:
  
  # mysql:
  #   image: mysql:8.0.30
  #   container_name: mysql
  #   hostname: mysql
  #   # NOTE: use of "mysql_native_password" is not recommended: https://dev.mysql.com/doc/refman/8.0/en/upgrading-from-previous-series.html#upgrade-caching-sha2-password
  #   # (this is just an example, not intended to be a production configuration)
  #   command: --default-authentication-plugin=mysql_native_password
  #   restart: always
  #   volumes:
  #     - /data/sql:/var/lib/mysql
  #   environment:
  #     MYSQL_ROOT_PASSWORD: srpass
  #   networks:
  #     sr_cluster_network:
  #       ipv4_address: ${SQL_IP}

  # adminer:
  #   image: adminer:4.8.1
  #   container_name: adminer
  #   hostname: adminer
  #   restart: always
  #   ports:
  #     - 8080:8080
  #   networks:
  #     sr_cluster_network:
  #       ipv4_address: ${SQL_ADMIN_IP}
      
  kafka_zk:
    image: docker.io/bitnami/zookeeper:3.8
    container_name: kafka_zk
    hostname: kafka_zk
    restart: always
    expose:
      - "2181"
      - "2888"
      - "3888"
    volumes:
      - /data/kafka_zk:/bitnami
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    networks:
      sr_cluster_network:
        ipv4_address: ${KAFKA_ZK_IP}

  kafka:
    image: docker.io/bitnami/kafka:3.1
    container_name: kafka
    hostname: kafka
    restart: always
    expose:
      - "9092"
    volumes:
      - /data/kafka:/bitnami
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://${KAFKA_IP}:9092
      - KAFKA_CFG_ZOOKEEPER_CONNECT=kafka_zk:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
    networks:
      sr_cluster_network:
        ipv4_address: ${KAFKA_IP}
    depends_on:
      - kafka_zk

  hbase:
    build: ./hbase
    image: hbase
    hostname: hbase
    container_name: hbase
    restart: always
    volumes:
      - /data/hbase:/tmp
      - /data/hbase/:/logs
    command: >
      bash -c "bin/start-hbase.sh && tail -f /logs/hbase--master-hbase.log"
    expose:
      - 16010
      - 16020
      - 16000
    networks:
      sr_cluster_network:
        ipv4_address: ${HBASE_IP}

  hbase_zk:
    image: docker.io/bitnami/zookeeper:3.8
    container_name: hbase_zk
    hostname: hbase_zk
    restart: always
    expose:
      - "2181"
      - "2888"
      - "3888"
    volumes:
      - /data/hbase_zk:/bitnami
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    networks:
      sr_cluster_network:
        ipv4_address: ${HBASE_ZK_IP}

  jaeger:
    image: "jaegertracing/all-in-one:1.38"
    container_name: jaeger
    restart: always
    expose:
      - 5775/udp
      - 6831/udp
      - 6832/udp
      - 5778
      - 16686
      - 14268
      - 9411
    environment:
      - COLLECTOR_ZIPKIN_HTTP_PORT=9411
    networks:
      sr_cluster_network:
        ipv4_address: ${JAEGER_AGENT_IP}

  prometheus:
    image: "prom/prometheus:v2.35.0"
    container_name: prometheus
    restart: always
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - /data/prometheus:/prometheus
    expose:
      - 9090
    networks:
      sr_cluster_network:
        ipv4_address: ${PROMETHEUS_IP}

  grafana:
    image: "grafana/grafana-oss:8.5.3"
    restart: always
    container_name: grafana
    volumes:
      - /data/grafana:/var/lib/grafana
      - ./grafana/conf/grafana.ini:/etc/grafana/grafana.ini
      - ./grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./grafana/datasources:/etc/grafana/provisioning/datasources
    expose:
      - 3000
    networks:
      sr_cluster_network:
        ipv4_address: ${GRAFANA_IP}

  gsvc:
    build:
      context: ../
      dockerfile: ./docker/app/Dockerfile-gsvc
    container_name: gsvc
    image: gsvc:v1
    restart: always
    entrypoint: ["/usr/bin/gsvc", "--host", "0.0.0.0", "--scheme", "http"]
    environment:
      - KAFKA_BROKERS=${KAFKA_IP}:9092
      - SERVICE_NAME=gsvc
      - JAEGER_IP=${JAEGER_AGENT_IP}
    expose:
      - 8000
      - 8001
      - 8002
      - 8003
    volumes:
      - /data/asset:/data/asset
    networks:
      sr_cluster_network:
        ipv4_address: ${SR_GSVC_IP}
    depends_on:
      - kafka

  rsvc:
    build:
      context: ../
      dockerfile: ./docker/app/Dockerfile-rsvc
    container_name: rsvc
    image: rsvc:v1
    restart: always
    entrypoint: ["/usr/bin/rsvc"]
    environment:
      - KAFKA_BROKERS=${KAFKA_IP}:9092
    expose:
      - 9000
    networks:
      sr_cluster_network:
        ipv4_address: ${SR_RSVC_IP}
    depends_on:
      - kafka

  cons:
    build:
      context: ../
      dockerfile: ./docker/app/Dockerfile-cons
    container_name: cons
    image: cons:v1
    entrypoint: ["/usr/bin/consumer"]
    restart: always
    environment:
      - KAFKA_BROKERS=${KAFKA_IP}:9092
    networks:
      sr_cluster_network:
        ipv4_address: ${SR_CONS_IP}
    depends_on:
      - kafka

networks:
  sr_cluster_network:
    external: true
